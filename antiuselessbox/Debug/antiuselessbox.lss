
antiuselessbox.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f38  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000006e  00800060  00000f38  00000fcc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  008000ce  008000ce  0000103a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000103a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001098  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  000010d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ddd  00000000  00000000  000011bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000041c  00000000  00000000  00001f99  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004a7  00000000  00000000  000023b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000220  00000000  00000000  0000285c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003bd  00000000  00000000  00002a7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006b3  00000000  00000000  00002e39  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000034ec  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 1a 01 	jmp	0x234	; 0x234 <__ctors_end>
   4:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
   8:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
   c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  10:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  14:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  18:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  1c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  20:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  24:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  28:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  2c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  30:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  34:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  38:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  3c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  40:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  44:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  48:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  4c:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>
  50:	0c 94 37 01 	jmp	0x26e	; 0x26e <__bad_interrupt>

00000054 <__trampolines_end>:
  54:	00 00       	nop
  56:	00 00       	nop
  58:	00 00       	nop
  5a:	00 5f       	subi	r16, 0xF0	; 240
  5c:	00 00       	nop
  5e:	00 07       	cpc	r16, r16
  60:	00 07       	cpc	r16, r16
  62:	00 14       	cp	r0, r0
  64:	7f 14       	cp	r7, r15
  66:	7f 14       	cp	r7, r15
  68:	24 2a       	or	r2, r20
  6a:	7f 2a       	or	r7, r31
  6c:	12 23       	and	r17, r18
  6e:	13 08       	sbc	r1, r3
  70:	64 62       	ori	r22, 0x24	; 36
  72:	36 49       	sbci	r19, 0x96	; 150
  74:	55 22       	and	r5, r21
  76:	50 00       	.word	0x0050	; ????
  78:	05 03       	mulsu	r16, r21
  7a:	00 00       	nop
  7c:	00 1c       	adc	r0, r0
  7e:	22 41       	sbci	r18, 0x12	; 18
  80:	00 00       	nop
  82:	41 22       	and	r4, r17
  84:	1c 00       	.word	0x001c	; ????
  86:	08 2a       	or	r0, r24
  88:	1c 2a       	or	r1, r28
  8a:	08 08       	sbc	r0, r8
  8c:	08 3e       	cpi	r16, 0xE8	; 232
  8e:	08 08       	sbc	r0, r8
  90:	00 50       	subi	r16, 0x00	; 0
  92:	30 00       	.word	0x0030	; ????
  94:	00 08       	sbc	r0, r0
  96:	08 08       	sbc	r0, r8
  98:	08 08       	sbc	r0, r8
  9a:	00 30       	cpi	r16, 0x00	; 0
  9c:	30 00       	.word	0x0030	; ????
  9e:	00 20       	and	r0, r0
  a0:	10 08       	sbc	r1, r0
  a2:	04 02       	muls	r16, r20
  a4:	3e 51       	subi	r19, 0x1E	; 30
  a6:	49 45       	sbci	r20, 0x59	; 89
  a8:	3e 00       	.word	0x003e	; ????
  aa:	42 7f       	andi	r20, 0xF2	; 242
  ac:	40 00       	.word	0x0040	; ????
  ae:	42 61       	ori	r20, 0x12	; 18
  b0:	51 49       	sbci	r21, 0x91	; 145
  b2:	46 21       	and	r20, r6
  b4:	41 45       	sbci	r20, 0x51	; 81
  b6:	4b 31       	cpi	r20, 0x1B	; 27
  b8:	18 14       	cp	r1, r8
  ba:	12 7f       	andi	r17, 0xF2	; 242
  bc:	10 27       	eor	r17, r16
  be:	45 45       	sbci	r20, 0x55	; 85
  c0:	45 39       	cpi	r20, 0x95	; 149
  c2:	3c 4a       	sbci	r19, 0xAC	; 172
  c4:	49 49       	sbci	r20, 0x99	; 153
  c6:	30 01       	movw	r6, r0
  c8:	71 09       	sbc	r23, r1
  ca:	05 03       	mulsu	r16, r21
  cc:	36 49       	sbci	r19, 0x96	; 150
  ce:	49 49       	sbci	r20, 0x99	; 153
  d0:	36 06       	cpc	r3, r22
  d2:	49 49       	sbci	r20, 0x99	; 153
  d4:	29 1e       	adc	r2, r25
  d6:	00 36       	cpi	r16, 0x60	; 96
  d8:	36 00       	.word	0x0036	; ????
  da:	00 00       	nop
  dc:	56 36       	cpi	r21, 0x66	; 102
  de:	00 00       	nop
  e0:	00 08       	sbc	r0, r0
  e2:	14 22       	and	r1, r20
  e4:	41 14       	cp	r4, r1
  e6:	14 14       	cp	r1, r4
  e8:	14 14       	cp	r1, r4
  ea:	41 22       	and	r4, r17
  ec:	14 08       	sbc	r1, r4
  ee:	00 02       	muls	r16, r16
  f0:	01 51       	subi	r16, 0x11	; 17
  f2:	09 06       	cpc	r0, r25
  f4:	32 49       	sbci	r19, 0x92	; 146
  f6:	79 41       	sbci	r23, 0x19	; 25
  f8:	3e 7e       	andi	r19, 0xEE	; 238
  fa:	11 11       	cpse	r17, r1
  fc:	11 7e       	andi	r17, 0xE1	; 225
  fe:	7f 49       	sbci	r23, 0x9F	; 159
 100:	49 49       	sbci	r20, 0x99	; 153
 102:	36 3e       	cpi	r19, 0xE6	; 230
 104:	41 41       	sbci	r20, 0x11	; 17
 106:	41 22       	and	r4, r17
 108:	7f 41       	sbci	r23, 0x1F	; 31
 10a:	41 22       	and	r4, r17
 10c:	1c 7f       	andi	r17, 0xFC	; 252
 10e:	49 49       	sbci	r20, 0x99	; 153
 110:	49 41       	sbci	r20, 0x19	; 25
 112:	7f 09       	sbc	r23, r15
 114:	09 01       	movw	r0, r18
 116:	01 3e       	cpi	r16, 0xE1	; 225
 118:	41 41       	sbci	r20, 0x11	; 17
 11a:	51 32       	cpi	r21, 0x21	; 33
 11c:	7f 08       	sbc	r7, r15
 11e:	08 08       	sbc	r0, r8
 120:	7f 00       	.word	0x007f	; ????
 122:	41 7f       	andi	r20, 0xF1	; 241
 124:	41 00       	.word	0x0041	; ????
 126:	20 40       	sbci	r18, 0x00	; 0
 128:	41 3f       	cpi	r20, 0xF1	; 241
 12a:	01 7f       	andi	r16, 0xF1	; 241
 12c:	08 14       	cp	r0, r8
 12e:	22 41       	sbci	r18, 0x12	; 18
 130:	7f 40       	sbci	r23, 0x0F	; 15
 132:	40 40       	sbci	r20, 0x00	; 0
 134:	40 7f       	andi	r20, 0xF0	; 240
 136:	02 04       	cpc	r0, r2
 138:	02 7f       	andi	r16, 0xF2	; 242
 13a:	7f 04       	cpc	r7, r15
 13c:	08 10       	cpse	r0, r8
 13e:	7f 3e       	cpi	r23, 0xEF	; 239
 140:	41 41       	sbci	r20, 0x11	; 17
 142:	41 3e       	cpi	r20, 0xE1	; 225
 144:	7f 09       	sbc	r23, r15
 146:	09 09       	sbc	r16, r9
 148:	06 3e       	cpi	r16, 0xE6	; 230
 14a:	41 51       	subi	r20, 0x11	; 17
 14c:	21 5e       	subi	r18, 0xE1	; 225
 14e:	7f 09       	sbc	r23, r15
 150:	19 29       	or	r17, r9
 152:	46 46       	sbci	r20, 0x66	; 102
 154:	49 49       	sbci	r20, 0x99	; 153
 156:	49 31       	cpi	r20, 0x19	; 25
 158:	01 01       	movw	r0, r2
 15a:	7f 01       	movw	r14, r30
 15c:	01 3f       	cpi	r16, 0xF1	; 241
 15e:	40 40       	sbci	r20, 0x00	; 0
 160:	40 3f       	cpi	r20, 0xF0	; 240
 162:	1f 20       	and	r1, r15
 164:	40 20       	and	r4, r0
 166:	1f 7f       	andi	r17, 0xFF	; 255
 168:	20 18       	sub	r2, r0
 16a:	20 7f       	andi	r18, 0xF0	; 240
 16c:	63 14       	cp	r6, r3
 16e:	08 14       	cp	r0, r8
 170:	63 03       	mulsu	r22, r19
 172:	04 78       	andi	r16, 0x84	; 132
 174:	04 03       	mulsu	r16, r20
 176:	61 51       	subi	r22, 0x11	; 17
 178:	49 45       	sbci	r20, 0x59	; 89
 17a:	43 00       	.word	0x0043	; ????
 17c:	00 7f       	andi	r16, 0xF0	; 240
 17e:	41 41       	sbci	r20, 0x11	; 17
 180:	02 04       	cpc	r0, r2
 182:	08 10       	cpse	r0, r8
 184:	20 41       	sbci	r18, 0x10	; 16
 186:	41 7f       	andi	r20, 0xF1	; 241
 188:	00 00       	nop
 18a:	04 02       	muls	r16, r20
 18c:	01 02       	muls	r16, r17
 18e:	04 40       	sbci	r16, 0x04	; 4
 190:	40 40       	sbci	r20, 0x00	; 0
 192:	40 40       	sbci	r20, 0x00	; 0
 194:	00 01       	movw	r0, r0
 196:	02 04       	cpc	r0, r2
 198:	00 20       	and	r0, r0
 19a:	54 54       	subi	r21, 0x44	; 68
 19c:	54 78       	andi	r21, 0x84	; 132
 19e:	7f 48       	sbci	r23, 0x8F	; 143
 1a0:	44 44       	sbci	r20, 0x44	; 68
 1a2:	38 38       	cpi	r19, 0x88	; 136
 1a4:	44 44       	sbci	r20, 0x44	; 68
 1a6:	44 20       	and	r4, r4
 1a8:	38 44       	sbci	r19, 0x48	; 72
 1aa:	44 48       	sbci	r20, 0x84	; 132
 1ac:	7f 38       	cpi	r23, 0x8F	; 143
 1ae:	54 54       	subi	r21, 0x44	; 68
 1b0:	54 18       	sub	r5, r4
 1b2:	08 7e       	andi	r16, 0xE8	; 232
 1b4:	09 01       	movw	r0, r18
 1b6:	02 08       	sbc	r0, r2
 1b8:	14 54       	subi	r17, 0x44	; 68
 1ba:	54 3c       	cpi	r21, 0xC4	; 196
 1bc:	7f 08       	sbc	r7, r15
 1be:	04 04       	cpc	r0, r4
 1c0:	78 00       	.word	0x0078	; ????
 1c2:	44 7d       	andi	r20, 0xD4	; 212
 1c4:	40 00       	.word	0x0040	; ????
 1c6:	20 40       	sbci	r18, 0x00	; 0
 1c8:	44 3d       	cpi	r20, 0xD4	; 212
 1ca:	00 00       	nop
 1cc:	7f 10       	cpse	r7, r15
 1ce:	28 44       	sbci	r18, 0x48	; 72
 1d0:	00 41       	sbci	r16, 0x10	; 16
 1d2:	7f 40       	sbci	r23, 0x0F	; 15
 1d4:	00 7c       	andi	r16, 0xC0	; 192
 1d6:	04 18       	sub	r0, r4
 1d8:	04 78       	andi	r16, 0x84	; 132
 1da:	7c 08       	sbc	r7, r12
 1dc:	04 04       	cpc	r0, r4
 1de:	78 38       	cpi	r23, 0x88	; 136
 1e0:	44 44       	sbci	r20, 0x44	; 68
 1e2:	44 38       	cpi	r20, 0x84	; 132
 1e4:	7c 14       	cp	r7, r12
 1e6:	14 14       	cp	r1, r4
 1e8:	08 08       	sbc	r0, r8
 1ea:	14 14       	cp	r1, r4
 1ec:	18 7c       	andi	r17, 0xC8	; 200
 1ee:	7c 08       	sbc	r7, r12
 1f0:	04 04       	cpc	r0, r4
 1f2:	08 48       	sbci	r16, 0x88	; 136
 1f4:	54 54       	subi	r21, 0x44	; 68
 1f6:	54 20       	and	r5, r4
 1f8:	04 3f       	cpi	r16, 0xF4	; 244
 1fa:	44 40       	sbci	r20, 0x04	; 4
 1fc:	20 3c       	cpi	r18, 0xC0	; 192
 1fe:	40 40       	sbci	r20, 0x00	; 0
 200:	20 7c       	andi	r18, 0xC0	; 192
 202:	1c 20       	and	r1, r12
 204:	40 20       	and	r4, r0
 206:	1c 3c       	cpi	r17, 0xCC	; 204
 208:	40 30       	cpi	r20, 0x00	; 0
 20a:	40 3c       	cpi	r20, 0xC0	; 192
 20c:	44 28       	or	r4, r4
 20e:	10 28       	or	r1, r0
 210:	44 0c       	add	r4, r4
 212:	50 50       	subi	r21, 0x00	; 0
 214:	50 3c       	cpi	r21, 0xC0	; 192
 216:	44 64       	ori	r20, 0x44	; 68
 218:	54 4c       	sbci	r21, 0xC4	; 196
 21a:	44 00       	.word	0x0044	; ????
 21c:	08 36       	cpi	r16, 0x68	; 104
 21e:	41 00       	.word	0x0041	; ????
 220:	00 00       	nop
 222:	7f 00       	.word	0x007f	; ????
 224:	00 00       	nop
 226:	41 36       	cpi	r20, 0x61	; 97
 228:	08 00       	.word	0x0008	; ????
 22a:	08 08       	sbc	r0, r8
 22c:	2a 1c       	adc	r2, r10
 22e:	08 08       	sbc	r0, r8
 230:	1c 2a       	or	r1, r28
 232:	08 08       	sbc	r0, r8

00000234 <__ctors_end>:
 234:	11 24       	eor	r1, r1
 236:	1f be       	out	0x3f, r1	; 63
 238:	cf e5       	ldi	r28, 0x5F	; 95
 23a:	d8 e0       	ldi	r29, 0x08	; 8
 23c:	de bf       	out	0x3e, r29	; 62
 23e:	cd bf       	out	0x3d, r28	; 61

00000240 <__do_copy_data>:
 240:	10 e0       	ldi	r17, 0x00	; 0
 242:	a0 e6       	ldi	r26, 0x60	; 96
 244:	b0 e0       	ldi	r27, 0x00	; 0
 246:	e8 e3       	ldi	r30, 0x38	; 56
 248:	ff e0       	ldi	r31, 0x0F	; 15
 24a:	02 c0       	rjmp	.+4      	; 0x250 <__do_copy_data+0x10>
 24c:	05 90       	lpm	r0, Z+
 24e:	0d 92       	st	X+, r0
 250:	ae 3c       	cpi	r26, 0xCE	; 206
 252:	b1 07       	cpc	r27, r17
 254:	d9 f7       	brne	.-10     	; 0x24c <__do_copy_data+0xc>

00000256 <__do_clear_bss>:
 256:	20 e0       	ldi	r18, 0x00	; 0
 258:	ae ec       	ldi	r26, 0xCE	; 206
 25a:	b0 e0       	ldi	r27, 0x00	; 0
 25c:	01 c0       	rjmp	.+2      	; 0x260 <.do_clear_bss_start>

0000025e <.do_clear_bss_loop>:
 25e:	1d 92       	st	X+, r1

00000260 <.do_clear_bss_start>:
 260:	a6 3d       	cpi	r26, 0xD6	; 214
 262:	b2 07       	cpc	r27, r18
 264:	e1 f7       	brne	.-8      	; 0x25e <.do_clear_bss_loop>
 266:	0e 94 98 02 	call	0x530	; 0x530 <main>
 26a:	0c 94 9a 07 	jmp	0xf34	; 0xf34 <_exit>

0000026e <__bad_interrupt>:
 26e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000272 <GLCD_EnableController>:
}

/* Enable controller */
void GLCD_EnableController(unsigned char controller)
{
switch(controller){
 272:	88 23       	and	r24, r24
 274:	19 f0       	breq	.+6      	; 0x27c <GLCD_EnableController+0xa>
 276:	81 30       	cpi	r24, 0x01	; 1
 278:	19 f0       	breq	.+6      	; 0x280 <GLCD_EnableController+0xe>
 27a:	08 95       	ret
	case 0 : CTRL_PORT &= ~GLCD_CS1; break;
 27c:	c6 98       	cbi	0x18, 6	; 24
 27e:	08 95       	ret
	case 1 : CTRL_PORT &= ~GLCD_CS2; break;
 280:	c5 98       	cbi	0x18, 5	; 24
 282:	08 95       	ret

00000284 <GLCD_DisableController>:
}

/* Disable controller */
void GLCD_DisableController(unsigned char controller)
{
switch(controller){
 284:	88 23       	and	r24, r24
 286:	19 f0       	breq	.+6      	; 0x28e <GLCD_DisableController+0xa>
 288:	81 30       	cpi	r24, 0x01	; 1
 28a:	19 f0       	breq	.+6      	; 0x292 <GLCD_DisableController+0xe>
 28c:	08 95       	ret
	case 0 : CTRL_PORT |= GLCD_CS1; break;
 28e:	c6 9a       	sbi	0x18, 6	; 24
 290:	08 95       	ret
	case 1 : CTRL_PORT |= GLCD_CS2; break;
 292:	c5 9a       	sbi	0x18, 5	; 24
 294:	08 95       	ret

00000296 <GLCD_ReadStatus>:
	}
}

/* Read status from controller */
unsigned char GLCD_ReadStatus(unsigned char controller)
{
 296:	cf 93       	push	r28
 298:	df 93       	push	r29
 29a:	c8 2f       	mov	r28, r24
	unsigned char status;
	GLCD_DATA_DIR = 0x00;
 29c:	1a ba       	out	0x1a, r1	; 26
	GLCD_DATA_PORT = 0x00;
 29e:	1b ba       	out	0x1b, r1	; 27
	CTRL_PORT |= GLCD_RW;
 2a0:	c1 9a       	sbi	0x18, 1	; 24
	CTRL_PORT &= ~GLCD_RS;
 2a2:	c4 98       	cbi	0x18, 4	; 24
	GLCD_EnableController(controller);
 2a4:	0e 94 39 01 	call	0x272	; 0x272 <GLCD_EnableController>
	CTRL_PORT |= GLCD_EN;
 2a8:	c0 9a       	sbi	0x18, 0	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2aa:	82 e0       	ldi	r24, 0x02	; 2
 2ac:	8a 95       	dec	r24
 2ae:	f1 f7       	brne	.-4      	; 0x2ac <GLCD_ReadStatus+0x16>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <GLCD_ReadStatus+0x1c>
	GLCD_Delay();
	status = GLCD_DATA_PIN;
 2b2:	d9 b3       	in	r29, 0x19	; 25
	CTRL_PORT &= ~GLCD_EN;
 2b4:	c0 98       	cbi	0x18, 0	; 24
	GLCD_DisableController(controller);
 2b6:	8c 2f       	mov	r24, r28
 2b8:	0e 94 42 01 	call	0x284	; 0x284 <GLCD_DisableController>
	return status;
}
 2bc:	8d 2f       	mov	r24, r29
 2be:	df 91       	pop	r29
 2c0:	cf 91       	pop	r28
 2c2:	08 95       	ret

000002c4 <GLCD_WriteCommand>:

/* Write command to controller */
void GLCD_WriteCommand(unsigned char commandToWrite, unsigned char controller)
{
 2c4:	cf 93       	push	r28
 2c6:	df 93       	push	r29
 2c8:	d8 2f       	mov	r29, r24
 2ca:	c6 2f       	mov	r28, r22
	char t = GLCD_ReadStatus(controller);
 2cc:	86 2f       	mov	r24, r22
 2ce:	0e 94 4b 01 	call	0x296	; 0x296 <GLCD_ReadStatus>
	while(t&DISPLAY_STATUS_BUSY)
 2d2:	88 23       	and	r24, r24
 2d4:	2c f4       	brge	.+10     	; 0x2e0 <GLCD_WriteCommand+0x1c>
	{
		t = GLCD_ReadStatus(controller);
 2d6:	8c 2f       	mov	r24, r28
 2d8:	0e 94 4b 01 	call	0x296	; 0x296 <GLCD_ReadStatus>

/* Write command to controller */
void GLCD_WriteCommand(unsigned char commandToWrite, unsigned char controller)
{
	char t = GLCD_ReadStatus(controller);
	while(t&DISPLAY_STATUS_BUSY)
 2dc:	88 23       	and	r24, r24
 2de:	dc f3       	brlt	.-10     	; 0x2d6 <GLCD_WriteCommand+0x12>
	{
		t = GLCD_ReadStatus(controller);
	}
	GLCD_DATA_DIR = 0xFF;
 2e0:	8f ef       	ldi	r24, 0xFF	; 255
 2e2:	8a bb       	out	0x1a, r24	; 26
	CTRL_PORT &= ~(GLCD_RW | GLCD_RS);
 2e4:	98 b3       	in	r25, 0x18	; 24
 2e6:	9d 7e       	andi	r25, 0xED	; 237
 2e8:	98 bb       	out	0x18, r25	; 24
	GLCD_EnableController(controller);
 2ea:	8c 2f       	mov	r24, r28
 2ec:	0e 94 39 01 	call	0x272	; 0x272 <GLCD_EnableController>
	GLCD_DATA_PORT = commandToWrite;
 2f0:	db bb       	out	0x1b, r29	; 27
	CTRL_PORT |= GLCD_EN;
 2f2:	c0 9a       	sbi	0x18, 0	; 24
 2f4:	82 e0       	ldi	r24, 0x02	; 2
 2f6:	8a 95       	dec	r24
 2f8:	f1 f7       	brne	.-4      	; 0x2f6 <GLCD_WriteCommand+0x32>
 2fa:	00 c0       	rjmp	.+0      	; 0x2fc <GLCD_WriteCommand+0x38>
	GLCD_Delay();
	CTRL_PORT &= ~GLCD_EN;
 2fc:	c0 98       	cbi	0x18, 0	; 24
	GLCD_DisableController(controller);
 2fe:	8c 2f       	mov	r24, r28
 300:	0e 94 42 01 	call	0x284	; 0x284 <GLCD_DisableController>
}
 304:	df 91       	pop	r29
 306:	cf 91       	pop	r28
 308:	08 95       	ret

0000030a <GLCD_WriteData>:
	return data;
}

/* Write data to current position */
void GLCD_WriteData(unsigned char dataToWrite)
{
 30a:	cf 93       	push	r28
 30c:	c8 2f       	mov	r28, r24
	while(GLCD_ReadStatus(screen_x / 64)&DISPLAY_STATUS_BUSY);
 30e:	80 91 cf 00 	lds	r24, 0x00CF
 312:	82 95       	swap	r24
 314:	86 95       	lsr	r24
 316:	86 95       	lsr	r24
 318:	83 70       	andi	r24, 0x03	; 3
 31a:	0e 94 4b 01 	call	0x296	; 0x296 <GLCD_ReadStatus>
 31e:	88 23       	and	r24, r24
 320:	b4 f3       	brlt	.-20     	; 0x30e <GLCD_WriteData+0x4>
	GLCD_DATA_DIR = 0xFF;
 322:	8f ef       	ldi	r24, 0xFF	; 255
 324:	8a bb       	out	0x1a, r24	; 26
	CTRL_PORT &= ~GLCD_RW;
 326:	c1 98       	cbi	0x18, 1	; 24
	CTRL_PORT |= GLCD_RS;
 328:	c4 9a       	sbi	0x18, 4	; 24
	GLCD_DATA_PORT = dataToWrite;
 32a:	cb bb       	out	0x1b, r28	; 27
	GLCD_EnableController(screen_x / 64);
 32c:	80 91 cf 00 	lds	r24, 0x00CF
 330:	82 95       	swap	r24
 332:	86 95       	lsr	r24
 334:	86 95       	lsr	r24
 336:	83 70       	andi	r24, 0x03	; 3
 338:	0e 94 39 01 	call	0x272	; 0x272 <GLCD_EnableController>
	CTRL_PORT |= GLCD_EN;
 33c:	c0 9a       	sbi	0x18, 0	; 24
 33e:	82 e0       	ldi	r24, 0x02	; 2
 340:	8a 95       	dec	r24
 342:	f1 f7       	brne	.-4      	; 0x340 <GLCD_WriteData+0x36>
 344:	00 c0       	rjmp	.+0      	; 0x346 <GLCD_WriteData+0x3c>
	GLCD_Delay();
	CTRL_PORT &= ~GLCD_EN;
 346:	c0 98       	cbi	0x18, 0	; 24
	GLCD_DisableController(screen_x / 64);
 348:	80 91 cf 00 	lds	r24, 0x00CF
 34c:	82 95       	swap	r24
 34e:	86 95       	lsr	r24
 350:	86 95       	lsr	r24
 352:	83 70       	andi	r24, 0x03	; 3
 354:	0e 94 42 01 	call	0x284	; 0x284 <GLCD_DisableController>
	screen_x++;
 358:	80 91 cf 00 	lds	r24, 0x00CF
 35c:	8f 5f       	subi	r24, 0xFF	; 255
 35e:	80 93 cf 00 	sts	0x00CF, r24
}
 362:	cf 91       	pop	r28
 364:	08 95       	ret

00000366 <GLCD_InitalizePorts>:

/* Initialize the ports, specified in KS0108.h */
void GLCD_InitalizePorts(void)
{
	CTRL_DIR |= (GLCD_CS1 | GLCD_CS2 | GLCD_RS | GLCD_RW | GLCD_EN);
 366:	87 b3       	in	r24, 0x17	; 23
 368:	83 67       	ori	r24, 0x73	; 115
 36a:	87 bb       	out	0x17, r24	; 23
	CTRL_PORT |= (GLCD_CS1 | GLCD_CS2);
 36c:	88 b3       	in	r24, 0x18	; 24
 36e:	80 66       	ori	r24, 0x60	; 96
 370:	88 bb       	out	0x18, r24	; 24
 372:	08 95       	ret

00000374 <GLCD_Initalize>:
}

void GLCD_Initalize(void)
{
	unsigned char i;
	GLCD_InitalizePorts();
 374:	0e 94 b3 01 	call	0x366	; 0x366 <GLCD_InitalizePorts>
	for(i = 0; i < 3; i++)
		GLCD_WriteCommand((DISPLAY_ON_CMD | ON), i);
 378:	60 e0       	ldi	r22, 0x00	; 0
 37a:	8f e3       	ldi	r24, 0x3F	; 63
 37c:	0e 94 62 01 	call	0x2c4	; 0x2c4 <GLCD_WriteCommand>
 380:	61 e0       	ldi	r22, 0x01	; 1
 382:	8f e3       	ldi	r24, 0x3F	; 63
 384:	0e 94 62 01 	call	0x2c4	; 0x2c4 <GLCD_WriteCommand>
 388:	62 e0       	ldi	r22, 0x02	; 2
 38a:	8f e3       	ldi	r24, 0x3F	; 63
 38c:	0e 94 62 01 	call	0x2c4	; 0x2c4 <GLCD_WriteCommand>
 390:	08 95       	ret

00000392 <GLCD_GoTo>:
}

void GLCD_GoTo(unsigned char x, unsigned char y)
{
 392:	1f 93       	push	r17
 394:	cf 93       	push	r28
 396:	df 93       	push	r29
 398:	d8 2f       	mov	r29, r24
 39a:	c6 2f       	mov	r28, r22
	unsigned char i;
	screen_x = x;
 39c:	80 93 cf 00 	sts	0x00CF, r24
	screen_y = y;
 3a0:	60 93 ce 00 	sts	0x00CE, r22

	for(i = 0; i < GLCD_SCREEN_WIDTH/64; i++)
	{
		GLCD_WriteCommand(DISPLAY_SET_Y | 0,i);
 3a4:	60 e0       	ldi	r22, 0x00	; 0
 3a6:	80 e4       	ldi	r24, 0x40	; 64
 3a8:	0e 94 62 01 	call	0x2c4	; 0x2c4 <GLCD_WriteCommand>
		GLCD_WriteCommand(DISPLAY_SET_X | y,i);
 3ac:	c8 6b       	ori	r28, 0xB8	; 184
 3ae:	60 e0       	ldi	r22, 0x00	; 0
 3b0:	8c 2f       	mov	r24, r28
 3b2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <GLCD_WriteCommand>
		GLCD_WriteCommand(DISPLAY_START_LINE | 0,i);
 3b6:	60 e0       	ldi	r22, 0x00	; 0
 3b8:	80 ec       	ldi	r24, 0xC0	; 192
 3ba:	0e 94 62 01 	call	0x2c4	; 0x2c4 <GLCD_WriteCommand>
	screen_x = x;
	screen_y = y;

	for(i = 0; i < GLCD_SCREEN_WIDTH/64; i++)
	{
		GLCD_WriteCommand(DISPLAY_SET_Y | 0,i);
 3be:	61 e0       	ldi	r22, 0x01	; 1
 3c0:	80 e4       	ldi	r24, 0x40	; 64
 3c2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <GLCD_WriteCommand>
		GLCD_WriteCommand(DISPLAY_SET_X | y,i);
 3c6:	61 e0       	ldi	r22, 0x01	; 1
 3c8:	8c 2f       	mov	r24, r28
 3ca:	0e 94 62 01 	call	0x2c4	; 0x2c4 <GLCD_WriteCommand>
		GLCD_WriteCommand(DISPLAY_START_LINE | 0,i);
 3ce:	61 e0       	ldi	r22, 0x01	; 1
 3d0:	80 ec       	ldi	r24, 0xC0	; 192
 3d2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <GLCD_WriteCommand>
	}
	GLCD_WriteCommand(DISPLAY_SET_Y | (x % 64), (x / 64));
 3d6:	1d 2f       	mov	r17, r29
 3d8:	12 95       	swap	r17
 3da:	16 95       	lsr	r17
 3dc:	16 95       	lsr	r17
 3de:	13 70       	andi	r17, 0x03	; 3
 3e0:	8d 2f       	mov	r24, r29
 3e2:	8f 73       	andi	r24, 0x3F	; 63
 3e4:	61 2f       	mov	r22, r17
 3e6:	80 64       	ori	r24, 0x40	; 64
 3e8:	0e 94 62 01 	call	0x2c4	; 0x2c4 <GLCD_WriteCommand>
	GLCD_WriteCommand(DISPLAY_SET_X | y, (x / 64));
 3ec:	61 2f       	mov	r22, r17
 3ee:	8c 2f       	mov	r24, r28
 3f0:	0e 94 62 01 	call	0x2c4	; 0x2c4 <GLCD_WriteCommand>
}
 3f4:	df 91       	pop	r29
 3f6:	cf 91       	pop	r28
 3f8:	1f 91       	pop	r17
 3fa:	08 95       	ret

000003fc <GLCD_ClearScreen>:

void GLCD_ClearScreen(void)
{
 3fc:	cf 93       	push	r28
 3fe:	df 93       	push	r29
	unsigned char i, j;
	for(j = 0; j < GLCD_SCREEN_HEIGHT/8; j++)
 400:	d0 e0       	ldi	r29, 0x00	; 0
	{
		GLCD_GoTo(0,j);
 402:	6d 2f       	mov	r22, r29
 404:	80 e0       	ldi	r24, 0x00	; 0
 406:	0e 94 c9 01 	call	0x392	; 0x392 <GLCD_GoTo>
 40a:	c0 e0       	ldi	r28, 0x00	; 0
		for(i = 0; i < GLCD_SCREEN_WIDTH; i++)
		GLCD_WriteData(0x00);
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	0e 94 85 01 	call	0x30a	; 0x30a <GLCD_WriteData>
{
	unsigned char i, j;
	for(j = 0; j < GLCD_SCREEN_HEIGHT/8; j++)
	{
		GLCD_GoTo(0,j);
		for(i = 0; i < GLCD_SCREEN_WIDTH; i++)
 412:	cf 5f       	subi	r28, 0xFF	; 255
 414:	c0 38       	cpi	r28, 0x80	; 128
 416:	d1 f7       	brne	.-12     	; 0x40c <GLCD_ClearScreen+0x10>
}

void GLCD_ClearScreen(void)
{
	unsigned char i, j;
	for(j = 0; j < GLCD_SCREEN_HEIGHT/8; j++)
 418:	df 5f       	subi	r29, 0xFF	; 255
 41a:	d8 30       	cpi	r29, 0x08	; 8
 41c:	91 f7       	brne	.-28     	; 0x402 <GLCD_ClearScreen+0x6>
	{
		GLCD_GoTo(0,j);
		for(i = 0; i < GLCD_SCREEN_WIDTH; i++)
		GLCD_WriteData(0x00);
	}
}
 41e:	df 91       	pop	r29
 420:	cf 91       	pop	r28
 422:	08 95       	ret

00000424 <GLCD_WriteChar>:

void GLCD_WriteChar(char charToWrite)
{
 424:	0f 93       	push	r16
 426:	1f 93       	push	r17
 428:	cf 93       	push	r28
 42a:	df 93       	push	r29
	int i;
	charToWrite -= 32; 
 42c:	80 52       	subi	r24, 0x20	; 32
	for(i = 0; i < 5; i++) 
		GLCD_WriteData(GLCD_ReadByteFromROMMemory((char *)((int)font5x8 + (5 * charToWrite) + i))); 
 42e:	90 e0       	ldi	r25, 0x00	; 0
 430:	ec 01       	movw	r28, r24
 432:	cc 0f       	add	r28, r28
 434:	dd 1f       	adc	r29, r29
 436:	cc 0f       	add	r28, r28
 438:	dd 1f       	adc	r29, r29
 43a:	8c 0f       	add	r24, r28
 43c:	9d 1f       	adc	r25, r29
 43e:	ec 01       	movw	r28, r24
 440:	cc 5a       	subi	r28, 0xAC	; 172
 442:	df 4f       	sbci	r29, 0xFF	; 255
 444:	8e 01       	movw	r16, r28
 446:	0b 5f       	subi	r16, 0xFB	; 251
 448:	1f 4f       	sbci	r17, 0xFF	; 255
	CTRL_PORT |= (GLCD_CS1 | GLCD_CS2);
}

unsigned char GLCD_ReadByteFromROMMemory(char * ptr)
{
	return pgm_read_byte(ptr);
 44a:	fe 01       	movw	r30, r28
 44c:	84 91       	lpm	r24, Z
void GLCD_WriteChar(char charToWrite)
{
	int i;
	charToWrite -= 32; 
	for(i = 0; i < 5; i++) 
		GLCD_WriteData(GLCD_ReadByteFromROMMemory((char *)((int)font5x8 + (5 * charToWrite) + i))); 
 44e:	0e 94 85 01 	call	0x30a	; 0x30a <GLCD_WriteData>
 452:	21 96       	adiw	r28, 0x01	; 1

void GLCD_WriteChar(char charToWrite)
{
	int i;
	charToWrite -= 32; 
	for(i = 0; i < 5; i++) 
 454:	c0 17       	cp	r28, r16
 456:	d1 07       	cpc	r29, r17
 458:	c1 f7       	brne	.-16     	; 0x44a <GLCD_WriteChar+0x26>
		GLCD_WriteData(GLCD_ReadByteFromROMMemory((char *)((int)font5x8 + (5 * charToWrite) + i))); 
	GLCD_WriteData(0x00);
 45a:	80 e0       	ldi	r24, 0x00	; 0
 45c:	0e 94 85 01 	call	0x30a	; 0x30a <GLCD_WriteData>
}
 460:	df 91       	pop	r29
 462:	cf 91       	pop	r28
 464:	1f 91       	pop	r17
 466:	0f 91       	pop	r16
 468:	08 95       	ret

0000046a <GLCD_WriteString>:

void GLCD_WriteString(char * stringToWrite)
{
 46a:	cf 93       	push	r28
 46c:	df 93       	push	r29
 46e:	ec 01       	movw	r28, r24
	while(*stringToWrite)
 470:	88 81       	ld	r24, Y
 472:	88 23       	and	r24, r24
 474:	31 f0       	breq	.+12     	; 0x482 <GLCD_WriteString+0x18>
 476:	21 96       	adiw	r28, 0x01	; 1
		GLCD_WriteChar(*stringToWrite++);
 478:	0e 94 12 02 	call	0x424	; 0x424 <GLCD_WriteChar>
	GLCD_WriteData(0x00);
}

void GLCD_WriteString(char * stringToWrite)
{
	while(*stringToWrite)
 47c:	89 91       	ld	r24, Y+
 47e:	81 11       	cpse	r24, r1
 480:	fb cf       	rjmp	.-10     	; 0x478 <GLCD_WriteString+0xe>
		GLCD_WriteChar(*stringToWrite++);
}
 482:	df 91       	pop	r29
 484:	cf 91       	pop	r28
 486:	08 95       	ret

00000488 <initUSART>:
	return 0;
}

void initUSART()
{
	UBRRH = 0;
 488:	10 bc       	out	0x20, r1	; 32
	UBRRL = 51;
 48a:	83 e3       	ldi	r24, 0x33	; 51
 48c:	89 b9       	out	0x09, r24	; 9
	
	UCSRB = ((1<<TXEN));
 48e:	88 e0       	ldi	r24, 0x08	; 8
 490:	8a b9       	out	0x0a, r24	; 10
	
	UCSRC = ((1<<URSEL) | (1<<UCSZ0) | (1<<UCSZ1));	//Asynchron 8N1
 492:	86 e8       	ldi	r24, 0x86	; 134
 494:	80 bd       	out	0x20, r24	; 32
	UCSRB |= (1 << UDRIE);	//no parity, UMSEL for async operation
 496:	55 9a       	sbi	0x0a, 5	; 10
 498:	08 95       	ret

0000049a <initTimer1PWM>:
}

void initTimer1PWM()
{
	/* FastPWM, TOP: OCR1A, Update of OCR1X: BOTTOM, TOV1 Flag Set on: TOP, Prescaler 8 */
	TCCR1A |= (1 << WGM11);
 49a:	8f b5       	in	r24, 0x2f	; 47
 49c:	82 60       	ori	r24, 0x02	; 2
 49e:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= (1 << WGM13) | (1 << WGM12) | (1 << CS11);
 4a0:	8e b5       	in	r24, 0x2e	; 46
 4a2:	8a 61       	ori	r24, 0x1A	; 26
 4a4:	8e bd       	out	0x2e, r24	; 46
	
	TCCR1A |= ((1 << COM1A1) | (1 << COM1A0));	// Inverted mode
 4a6:	8f b5       	in	r24, 0x2f	; 47
 4a8:	80 6c       	ori	r24, 0xC0	; 192
 4aa:	8f bd       	out	0x2f, r24	; 47
	
	ICR1 = 19999;
 4ac:	8f e1       	ldi	r24, 0x1F	; 31
 4ae:	9e e4       	ldi	r25, 0x4E	; 78
 4b0:	97 bd       	out	0x27, r25	; 39
 4b2:	86 bd       	out	0x26, r24	; 38
 4b4:	08 95       	ret

000004b6 <initServo>:
}

void initServo()
{
	DDRD |= (1 << SERVO_PIN);
 4b6:	8d 9a       	sbi	0x11, 5	; 17
 4b8:	08 95       	ret

000004ba <usartTransmit>:
}

void usartTransmit(unsigned char data)
{
	while(!(UCSRA & (1 << UDRE)))
 4ba:	5d 9b       	sbis	0x0b, 5	; 11
 4bc:	fe cf       	rjmp	.-4      	; 0x4ba <usartTransmit>
	{
		
	}
	UDR = data;
 4be:	8c b9       	out	0x0c, r24	; 12
 4c0:	08 95       	ret

000004c2 <startTimer0>:
	TCNT0 = 0;
}

void startTimer0()
{
	TCCR0 &= ~((1 << WGM01) | (1 << WGM00));	//Normal mode
 4c2:	83 b7       	in	r24, 0x33	; 51
 4c4:	87 7b       	andi	r24, 0xB7	; 183
 4c6:	83 bf       	out	0x33, r24	; 51
	TCCR0 &= ~((1 << COM01) | (1 << COM00));	//Normal port operation
 4c8:	83 b7       	in	r24, 0x33	; 51
 4ca:	8f 7c       	andi	r24, 0xCF	; 207
 4cc:	83 bf       	out	0x33, r24	; 51
	TCCR0 |= ((1 << CS02));	//Prescaler 256
 4ce:	83 b7       	in	r24, 0x33	; 51
 4d0:	84 60       	ori	r24, 0x04	; 4
 4d2:	83 bf       	out	0x33, r24	; 51
	TCNT0 = 0;
 4d4:	12 be       	out	0x32, r1	; 50
 4d6:	08 95       	ret

000004d8 <stopTimer0>:
}

void stopTimer0()
{
	TCCR0 &= ~((1 << CS02) | (1 << CS01) | (1 << CS00));
 4d8:	83 b7       	in	r24, 0x33	; 51
 4da:	88 7f       	andi	r24, 0xF8	; 248
 4dc:	83 bf       	out	0x33, r24	; 51
 4de:	08 95       	ret

000004e0 <executePing>:
	UDR = data;
}

void executePing()
{
	PING_DDR |= (1 << PING_PIN);
 4e0:	8a 9a       	sbi	0x11, 2	; 17
	PING_OUTPUT_PORT |= (1 << PING_PIN);	//Set pin high
 4e2:	92 9a       	sbi	0x12, 2	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4e4:	8f e0       	ldi	r24, 0x0F	; 15
 4e6:	97 e2       	ldi	r25, 0x27	; 39
 4e8:	01 97       	sbiw	r24, 0x01	; 1
 4ea:	f1 f7       	brne	.-4      	; 0x4e8 <executePing+0x8>
 4ec:	00 c0       	rjmp	.+0      	; 0x4ee <executePing+0xe>
 4ee:	00 00       	nop
	_delay_ms(5);
	PING_OUTPUT_PORT &= ~(1 << PING_PIN);	//Set pin low
 4f0:	92 98       	cbi	0x12, 2	; 18
	PING_DDR &= ~(1 << PING_PIN);	//Set pin to input
 4f2:	8a 98       	cbi	0x11, 2	; 17
	
	while(!(PING_INPUT_PORT & (1 << PING_PIN)))	//Wait until the pin is high
 4f4:	82 9b       	sbis	0x10, 2	; 16
 4f6:	fe cf       	rjmp	.-4      	; 0x4f4 <executePing+0x14>
	{
		
	}
	startTimer0();
 4f8:	0e 94 61 02 	call	0x4c2	; 0x4c2 <startTimer0>
	
	while(PING_INPUT_PORT & (1 << PING_PIN))	//Wait until the pin is low again
 4fc:	82 99       	sbic	0x10, 2	; 16
 4fe:	fe cf       	rjmp	.-4      	; 0x4fc <executePing+0x1c>
	{
		
	}
	stopTimer0();
 500:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <stopTimer0>
	distance = TCNT0 * 0.55168;	//Value in centimeter
 504:	62 b7       	in	r22, 0x32	; 50
 506:	70 e0       	ldi	r23, 0x00	; 0
 508:	80 e0       	ldi	r24, 0x00	; 0
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	0e 94 a5 03 	call	0x74a	; 0x74a <__floatsisf>
 510:	27 ee       	ldi	r18, 0xE7	; 231
 512:	3a e3       	ldi	r19, 0x3A	; 58
 514:	4d e0       	ldi	r20, 0x0D	; 13
 516:	5f e3       	ldi	r21, 0x3F	; 63
 518:	0e 94 2d 04 	call	0x85a	; 0x85a <__mulsf3>
 51c:	60 93 d2 00 	sts	0x00D2, r22
 520:	70 93 d3 00 	sts	0x00D3, r23
 524:	80 93 d4 00 	sts	0x00D4, r24
 528:	90 93 d5 00 	sts	0x00D5, r25
	TCNT0 = 0;
 52c:	12 be       	out	0x32, r1	; 50
 52e:	08 95       	ret

00000530 <main>:
void startTimer0();
void stopTimer0();

/* MAIN FUNCTION */
int main(void)	
{
 530:	cf 93       	push	r28
 532:	df 93       	push	r29
 534:	cd b7       	in	r28, 0x3d	; 61
 536:	de b7       	in	r29, 0x3e	; 62
 538:	2a 97       	sbiw	r28, 0x0a	; 10
 53a:	0f b6       	in	r0, 0x3f	; 63
 53c:	f8 94       	cli
 53e:	de bf       	out	0x3e, r29	; 62
 540:	0f be       	out	0x3f, r0	; 63
 542:	cd bf       	out	0x3d, r28	; 61
 544:	2f e7       	ldi	r18, 0x7F	; 127
 546:	88 e3       	ldi	r24, 0x38	; 56
 548:	91 e0       	ldi	r25, 0x01	; 1
 54a:	21 50       	subi	r18, 0x01	; 1
 54c:	80 40       	sbci	r24, 0x00	; 0
 54e:	90 40       	sbci	r25, 0x00	; 0
 550:	e1 f7       	brne	.-8      	; 0x54a <main+0x1a>
 552:	00 c0       	rjmp	.+0      	; 0x554 <main+0x24>
 554:	00 00       	nop
	char distanceString[10];
	unsigned char enableServo = 0;
	unsigned char toggleDirection = 0;
	
	_delay_ms(50);
	GLCD_Initalize();
 556:	0e 94 ba 01 	call	0x374	; 0x374 <GLCD_Initalize>
	
	GLCD_ClearScreen();
 55a:	0e 94 fe 01 	call	0x3fc	; 0x3fc <GLCD_ClearScreen>
	GLCD_GoTo(0,0);
 55e:	60 e0       	ldi	r22, 0x00	; 0
 560:	80 e0       	ldi	r24, 0x00	; 0
 562:	0e 94 c9 01 	call	0x392	; 0x392 <GLCD_GoTo>
	GLCD_WriteString(" #   #######  ######");
 566:	80 e6       	ldi	r24, 0x60	; 96
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	0e 94 35 02 	call	0x46a	; 0x46a <GLCD_WriteString>
	GLCD_GoTo(0,1);
 56e:	61 e0       	ldi	r22, 0x01	; 1
 570:	80 e0       	ldi	r24, 0x00	; 0
 572:	0e 94 c9 01 	call	0x392	; 0x392 <GLCD_GoTo>
	GLCD_WriteString(" #      #     #     ");
 576:	85 e7       	ldi	r24, 0x75	; 117
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	0e 94 35 02 	call	0x46a	; 0x46a <GLCD_WriteString>
	GLCD_GoTo(0,2);
 57e:	62 e0       	ldi	r22, 0x02	; 2
 580:	80 e0       	ldi	r24, 0x00	; 0
 582:	0e 94 c9 01 	call	0x392	; 0x392 <GLCD_GoTo>
	GLCD_WriteString(" #      #     #     ");
 586:	85 e7       	ldi	r24, 0x75	; 117
 588:	90 e0       	ldi	r25, 0x00	; 0
 58a:	0e 94 35 02 	call	0x46a	; 0x46a <GLCD_WriteString>
	GLCD_GoTo(0,3);
 58e:	63 e0       	ldi	r22, 0x03	; 3
 590:	80 e0       	ldi	r24, 0x00	; 0
 592:	0e 94 c9 01 	call	0x392	; 0x392 <GLCD_GoTo>
	GLCD_WriteString(" #      #     #_____");
 596:	8a e8       	ldi	r24, 0x8A	; 138
 598:	90 e0       	ldi	r25, 0x00	; 0
 59a:	0e 94 35 02 	call	0x46a	; 0x46a <GLCD_WriteString>
	GLCD_GoTo(0,4);
 59e:	64 e0       	ldi	r22, 0x04	; 4
 5a0:	80 e0       	ldi	r24, 0x00	; 0
 5a2:	0e 94 c9 01 	call	0x392	; 0x392 <GLCD_GoTo>
	GLCD_WriteString(" #      #          #");
 5a6:	8f e9       	ldi	r24, 0x9F	; 159
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	0e 94 35 02 	call	0x46a	; 0x46a <GLCD_WriteString>
	GLCD_GoTo(0,5);
 5ae:	65 e0       	ldi	r22, 0x05	; 5
 5b0:	80 e0       	ldi	r24, 0x00	; 0
 5b2:	0e 94 c9 01 	call	0x392	; 0x392 <GLCD_GoTo>
	GLCD_WriteString(" #      #          #");
 5b6:	8f e9       	ldi	r24, 0x9F	; 159
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	0e 94 35 02 	call	0x46a	; 0x46a <GLCD_WriteString>
	GLCD_GoTo(0,6);
 5be:	66 e0       	ldi	r22, 0x06	; 6
 5c0:	80 e0       	ldi	r24, 0x00	; 0
 5c2:	0e 94 c9 01 	call	0x392	; 0x392 <GLCD_GoTo>
	GLCD_WriteString(" #      #          #");
 5c6:	8f e9       	ldi	r24, 0x9F	; 159
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	0e 94 35 02 	call	0x46a	; 0x46a <GLCD_WriteString>
	GLCD_GoTo(0,7);
 5ce:	67 e0       	ldi	r22, 0x07	; 7
 5d0:	80 e0       	ldi	r24, 0x00	; 0
 5d2:	0e 94 c9 01 	call	0x392	; 0x392 <GLCD_GoTo>
	GLCD_WriteString(" #      #     ######");
 5d6:	84 eb       	ldi	r24, 0xB4	; 180
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	0e 94 35 02 	call	0x46a	; 0x46a <GLCD_WriteString>
	
	initUSART();
 5de:	0e 94 44 02 	call	0x488	; 0x488 <initUSART>
	initTimer1PWM();
 5e2:	0e 94 4d 02 	call	0x49a	; 0x49a <initTimer1PWM>
	initServo();
 5e6:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <initServo>
int main(void)	
{
	/* Variables */
	char distanceString[10];
	unsigned char enableServo = 0;
	unsigned char toggleDirection = 0;
 5ea:	d1 2c       	mov	r13, r1
	initTimer1PWM();
	initServo();
	
    while (1) 
    {
		sprintf(distanceString, "%3d", (int)distance);	//Convert integer to char array
 5ec:	0f 2e       	mov	r0, r31
 5ee:	f9 ec       	ldi	r31, 0xC9	; 201
 5f0:	ef 2e       	mov	r14, r31
 5f2:	f0 e0       	ldi	r31, 0x00	; 0
 5f4:	ff 2e       	mov	r15, r31
 5f6:	f0 2d       	mov	r31, r0
 5f8:	8e 01       	movw	r16, r28
 5fa:	0f 5f       	subi	r16, 0xFF	; 255
 5fc:	1f 4f       	sbci	r17, 0xFF	; 255
					toggleDirection = 1;
				}				
				else if(toggleDirection == 1) 
				{
					OCR1A = ICR1 - 1600;	//Position 2 of the servo
					toggleDirection = 0;
 5fe:	b1 2c       	mov	r11, r1
			if(countGlobal >= 20)	//Only execute this function every seconds
			{
				if(toggleDirection == 0) 
				{
					OCR1A = ICR1 - 800;	//Position 1 of the servo
					toggleDirection = 1;
 600:	cc 24       	eor	r12, r12
 602:	c3 94       	inc	r12
	initTimer1PWM();
	initServo();
	
    while (1) 
    {
		sprintf(distanceString, "%3d", (int)distance);	//Convert integer to char array
 604:	60 91 d2 00 	lds	r22, 0x00D2
 608:	70 91 d3 00 	lds	r23, 0x00D3
 60c:	80 91 d4 00 	lds	r24, 0x00D4
 610:	90 91 d5 00 	lds	r25, 0x00D5
 614:	0e 94 6d 03 	call	0x6da	; 0x6da <__fixsfsi>
 618:	7f 93       	push	r23
 61a:	6f 93       	push	r22
 61c:	ff 92       	push	r15
 61e:	ef 92       	push	r14
 620:	1f 93       	push	r17
 622:	0f 93       	push	r16
 624:	0e 94 c2 04 	call	0x984	; 0x984 <sprintf>
		
		executePing();	//Make distant measurement
 628:	0e 94 70 02 	call	0x4e0	; 0x4e0 <executePing>
		
		/* Write distance to GLCD */
		GLCD_GoTo(15,3);
 62c:	63 e0       	ldi	r22, 0x03	; 3
 62e:	8f e0       	ldi	r24, 0x0F	; 15
 630:	0e 94 c9 01 	call	0x392	; 0x392 <GLCD_GoTo>
		GLCD_WriteString(distanceString);
 634:	c8 01       	movw	r24, r16
 636:	0e 94 35 02 	call	0x46a	; 0x46a <GLCD_WriteString>
		
		if(distance <= 15)
 63a:	0f 90       	pop	r0
 63c:	0f 90       	pop	r0
 63e:	0f 90       	pop	r0
 640:	0f 90       	pop	r0
 642:	0f 90       	pop	r0
 644:	0f 90       	pop	r0
 646:	20 e0       	ldi	r18, 0x00	; 0
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	40 e7       	ldi	r20, 0x70	; 112
 64c:	51 e4       	ldi	r21, 0x41	; 65
 64e:	60 91 d2 00 	lds	r22, 0x00D2
 652:	70 91 d3 00 	lds	r23, 0x00D3
 656:	80 91 d4 00 	lds	r24, 0x00D4
 65a:	90 91 d5 00 	lds	r25, 0x00D5
 65e:	0e 94 68 03 	call	0x6d0	; 0x6d0 <__cmpsf2>
 662:	18 16       	cp	r1, r24
 664:	0c f1       	brlt	.+66     	; 0x6a8 <main+0x178>
		{
			enableServo = 1;
			usartTransmit('A');
 666:	81 e4       	ldi	r24, 0x41	; 65
 668:	0e 94 5d 02 	call	0x4ba	; 0x4ba <usartTransmit>
		}
		
		if(enableServo == 1)
		{
			if(countGlobal >= 20)	//Only execute this function every seconds
 66c:	80 91 d0 00 	lds	r24, 0x00D0
 670:	90 91 d1 00 	lds	r25, 0x00D1
 674:	44 97       	sbiw	r24, 0x14	; 20
 676:	c4 f0       	brlt	.+48     	; 0x6a8 <main+0x178>
			{
				if(toggleDirection == 0) 
 678:	d1 10       	cpse	r13, r1
 67a:	08 c0       	rjmp	.+16     	; 0x68c <main+0x15c>
				{
					OCR1A = ICR1 - 800;	//Position 1 of the servo
 67c:	86 b5       	in	r24, 0x26	; 38
 67e:	97 b5       	in	r25, 0x27	; 39
 680:	80 52       	subi	r24, 0x20	; 32
 682:	93 40       	sbci	r25, 0x03	; 3
 684:	9b bd       	out	0x2b, r25	; 43
 686:	8a bd       	out	0x2a, r24	; 42
					toggleDirection = 1;
 688:	dc 2c       	mov	r13, r12
 68a:	0a c0       	rjmp	.+20     	; 0x6a0 <main+0x170>
				}				
				else if(toggleDirection == 1) 
 68c:	21 e0       	ldi	r18, 0x01	; 1
 68e:	d2 12       	cpse	r13, r18
 690:	07 c0       	rjmp	.+14     	; 0x6a0 <main+0x170>
				{
					OCR1A = ICR1 - 1600;	//Position 2 of the servo
 692:	86 b5       	in	r24, 0x26	; 38
 694:	97 b5       	in	r25, 0x27	; 39
 696:	80 54       	subi	r24, 0x40	; 64
 698:	96 40       	sbci	r25, 0x06	; 6
 69a:	9b bd       	out	0x2b, r25	; 43
 69c:	8a bd       	out	0x2a, r24	; 42
					toggleDirection = 0;
 69e:	db 2c       	mov	r13, r11
				}
				
				countGlobal = 0;
 6a0:	10 92 d1 00 	sts	0x00D1, r1
 6a4:	10 92 d0 00 	sts	0x00D0, r1
 6a8:	8f e7       	ldi	r24, 0x7F	; 127
 6aa:	98 e3       	ldi	r25, 0x38	; 56
 6ac:	21 e0       	ldi	r18, 0x01	; 1
 6ae:	81 50       	subi	r24, 0x01	; 1
 6b0:	90 40       	sbci	r25, 0x00	; 0
 6b2:	20 40       	sbci	r18, 0x00	; 0
 6b4:	e1 f7       	brne	.-8      	; 0x6ae <main+0x17e>
 6b6:	00 c0       	rjmp	.+0      	; 0x6b8 <main+0x188>
 6b8:	00 00       	nop
			enableServo = 0;
		}
		
		_delay_ms(50);
		
		countGlobal++;	//Increment count variable
 6ba:	20 91 d0 00 	lds	r18, 0x00D0
 6be:	30 91 d1 00 	lds	r19, 0x00D1
 6c2:	2f 5f       	subi	r18, 0xFF	; 255
 6c4:	3f 4f       	sbci	r19, 0xFF	; 255
 6c6:	30 93 d1 00 	sts	0x00D1, r19
 6ca:	20 93 d0 00 	sts	0x00D0, r18
    }
 6ce:	9a cf       	rjmp	.-204    	; 0x604 <main+0xd4>

000006d0 <__cmpsf2>:
 6d0:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <__fp_cmp>
 6d4:	08 f4       	brcc	.+2      	; 0x6d8 <__cmpsf2+0x8>
 6d6:	81 e0       	ldi	r24, 0x01	; 1
 6d8:	08 95       	ret

000006da <__fixsfsi>:
 6da:	0e 94 74 03 	call	0x6e8	; 0x6e8 <__fixunssfsi>
 6de:	68 94       	set
 6e0:	b1 11       	cpse	r27, r1
 6e2:	0c 94 27 04 	jmp	0x84e	; 0x84e <__fp_szero>
 6e6:	08 95       	ret

000006e8 <__fixunssfsi>:
 6e8:	0e 94 0c 04 	call	0x818	; 0x818 <__fp_splitA>
 6ec:	88 f0       	brcs	.+34     	; 0x710 <__fixunssfsi+0x28>
 6ee:	9f 57       	subi	r25, 0x7F	; 127
 6f0:	98 f0       	brcs	.+38     	; 0x718 <__fixunssfsi+0x30>
 6f2:	b9 2f       	mov	r27, r25
 6f4:	99 27       	eor	r25, r25
 6f6:	b7 51       	subi	r27, 0x17	; 23
 6f8:	b0 f0       	brcs	.+44     	; 0x726 <__fixunssfsi+0x3e>
 6fa:	e1 f0       	breq	.+56     	; 0x734 <__fixunssfsi+0x4c>
 6fc:	66 0f       	add	r22, r22
 6fe:	77 1f       	adc	r23, r23
 700:	88 1f       	adc	r24, r24
 702:	99 1f       	adc	r25, r25
 704:	1a f0       	brmi	.+6      	; 0x70c <__fixunssfsi+0x24>
 706:	ba 95       	dec	r27
 708:	c9 f7       	brne	.-14     	; 0x6fc <__fixunssfsi+0x14>
 70a:	14 c0       	rjmp	.+40     	; 0x734 <__fixunssfsi+0x4c>
 70c:	b1 30       	cpi	r27, 0x01	; 1
 70e:	91 f0       	breq	.+36     	; 0x734 <__fixunssfsi+0x4c>
 710:	0e 94 26 04 	call	0x84c	; 0x84c <__fp_zero>
 714:	b1 e0       	ldi	r27, 0x01	; 1
 716:	08 95       	ret
 718:	0c 94 26 04 	jmp	0x84c	; 0x84c <__fp_zero>
 71c:	67 2f       	mov	r22, r23
 71e:	78 2f       	mov	r23, r24
 720:	88 27       	eor	r24, r24
 722:	b8 5f       	subi	r27, 0xF8	; 248
 724:	39 f0       	breq	.+14     	; 0x734 <__fixunssfsi+0x4c>
 726:	b9 3f       	cpi	r27, 0xF9	; 249
 728:	cc f3       	brlt	.-14     	; 0x71c <__fixunssfsi+0x34>
 72a:	86 95       	lsr	r24
 72c:	77 95       	ror	r23
 72e:	67 95       	ror	r22
 730:	b3 95       	inc	r27
 732:	d9 f7       	brne	.-10     	; 0x72a <__fixunssfsi+0x42>
 734:	3e f4       	brtc	.+14     	; 0x744 <__fixunssfsi+0x5c>
 736:	90 95       	com	r25
 738:	80 95       	com	r24
 73a:	70 95       	com	r23
 73c:	61 95       	neg	r22
 73e:	7f 4f       	sbci	r23, 0xFF	; 255
 740:	8f 4f       	sbci	r24, 0xFF	; 255
 742:	9f 4f       	sbci	r25, 0xFF	; 255
 744:	08 95       	ret

00000746 <__floatunsisf>:
 746:	e8 94       	clt
 748:	09 c0       	rjmp	.+18     	; 0x75c <__floatsisf+0x12>

0000074a <__floatsisf>:
 74a:	97 fb       	bst	r25, 7
 74c:	3e f4       	brtc	.+14     	; 0x75c <__floatsisf+0x12>
 74e:	90 95       	com	r25
 750:	80 95       	com	r24
 752:	70 95       	com	r23
 754:	61 95       	neg	r22
 756:	7f 4f       	sbci	r23, 0xFF	; 255
 758:	8f 4f       	sbci	r24, 0xFF	; 255
 75a:	9f 4f       	sbci	r25, 0xFF	; 255
 75c:	99 23       	and	r25, r25
 75e:	a9 f0       	breq	.+42     	; 0x78a <__floatsisf+0x40>
 760:	f9 2f       	mov	r31, r25
 762:	96 e9       	ldi	r25, 0x96	; 150
 764:	bb 27       	eor	r27, r27
 766:	93 95       	inc	r25
 768:	f6 95       	lsr	r31
 76a:	87 95       	ror	r24
 76c:	77 95       	ror	r23
 76e:	67 95       	ror	r22
 770:	b7 95       	ror	r27
 772:	f1 11       	cpse	r31, r1
 774:	f8 cf       	rjmp	.-16     	; 0x766 <__floatsisf+0x1c>
 776:	fa f4       	brpl	.+62     	; 0x7b6 <__floatsisf+0x6c>
 778:	bb 0f       	add	r27, r27
 77a:	11 f4       	brne	.+4      	; 0x780 <__floatsisf+0x36>
 77c:	60 ff       	sbrs	r22, 0
 77e:	1b c0       	rjmp	.+54     	; 0x7b6 <__floatsisf+0x6c>
 780:	6f 5f       	subi	r22, 0xFF	; 255
 782:	7f 4f       	sbci	r23, 0xFF	; 255
 784:	8f 4f       	sbci	r24, 0xFF	; 255
 786:	9f 4f       	sbci	r25, 0xFF	; 255
 788:	16 c0       	rjmp	.+44     	; 0x7b6 <__floatsisf+0x6c>
 78a:	88 23       	and	r24, r24
 78c:	11 f0       	breq	.+4      	; 0x792 <__floatsisf+0x48>
 78e:	96 e9       	ldi	r25, 0x96	; 150
 790:	11 c0       	rjmp	.+34     	; 0x7b4 <__floatsisf+0x6a>
 792:	77 23       	and	r23, r23
 794:	21 f0       	breq	.+8      	; 0x79e <__floatsisf+0x54>
 796:	9e e8       	ldi	r25, 0x8E	; 142
 798:	87 2f       	mov	r24, r23
 79a:	76 2f       	mov	r23, r22
 79c:	05 c0       	rjmp	.+10     	; 0x7a8 <__floatsisf+0x5e>
 79e:	66 23       	and	r22, r22
 7a0:	71 f0       	breq	.+28     	; 0x7be <__floatsisf+0x74>
 7a2:	96 e8       	ldi	r25, 0x86	; 134
 7a4:	86 2f       	mov	r24, r22
 7a6:	70 e0       	ldi	r23, 0x00	; 0
 7a8:	60 e0       	ldi	r22, 0x00	; 0
 7aa:	2a f0       	brmi	.+10     	; 0x7b6 <__floatsisf+0x6c>
 7ac:	9a 95       	dec	r25
 7ae:	66 0f       	add	r22, r22
 7b0:	77 1f       	adc	r23, r23
 7b2:	88 1f       	adc	r24, r24
 7b4:	da f7       	brpl	.-10     	; 0x7ac <__floatsisf+0x62>
 7b6:	88 0f       	add	r24, r24
 7b8:	96 95       	lsr	r25
 7ba:	87 95       	ror	r24
 7bc:	97 f9       	bld	r25, 7
 7be:	08 95       	ret

000007c0 <__fp_cmp>:
 7c0:	99 0f       	add	r25, r25
 7c2:	00 08       	sbc	r0, r0
 7c4:	55 0f       	add	r21, r21
 7c6:	aa 0b       	sbc	r26, r26
 7c8:	e0 e8       	ldi	r30, 0x80	; 128
 7ca:	fe ef       	ldi	r31, 0xFE	; 254
 7cc:	16 16       	cp	r1, r22
 7ce:	17 06       	cpc	r1, r23
 7d0:	e8 07       	cpc	r30, r24
 7d2:	f9 07       	cpc	r31, r25
 7d4:	c0 f0       	brcs	.+48     	; 0x806 <__fp_cmp+0x46>
 7d6:	12 16       	cp	r1, r18
 7d8:	13 06       	cpc	r1, r19
 7da:	e4 07       	cpc	r30, r20
 7dc:	f5 07       	cpc	r31, r21
 7de:	98 f0       	brcs	.+38     	; 0x806 <__fp_cmp+0x46>
 7e0:	62 1b       	sub	r22, r18
 7e2:	73 0b       	sbc	r23, r19
 7e4:	84 0b       	sbc	r24, r20
 7e6:	95 0b       	sbc	r25, r21
 7e8:	39 f4       	brne	.+14     	; 0x7f8 <__fp_cmp+0x38>
 7ea:	0a 26       	eor	r0, r26
 7ec:	61 f0       	breq	.+24     	; 0x806 <__fp_cmp+0x46>
 7ee:	23 2b       	or	r18, r19
 7f0:	24 2b       	or	r18, r20
 7f2:	25 2b       	or	r18, r21
 7f4:	21 f4       	brne	.+8      	; 0x7fe <__fp_cmp+0x3e>
 7f6:	08 95       	ret
 7f8:	0a 26       	eor	r0, r26
 7fa:	09 f4       	brne	.+2      	; 0x7fe <__fp_cmp+0x3e>
 7fc:	a1 40       	sbci	r26, 0x01	; 1
 7fe:	a6 95       	lsr	r26
 800:	8f ef       	ldi	r24, 0xFF	; 255
 802:	81 1d       	adc	r24, r1
 804:	81 1d       	adc	r24, r1
 806:	08 95       	ret

00000808 <__fp_split3>:
 808:	57 fd       	sbrc	r21, 7
 80a:	90 58       	subi	r25, 0x80	; 128
 80c:	44 0f       	add	r20, r20
 80e:	55 1f       	adc	r21, r21
 810:	59 f0       	breq	.+22     	; 0x828 <__fp_splitA+0x10>
 812:	5f 3f       	cpi	r21, 0xFF	; 255
 814:	71 f0       	breq	.+28     	; 0x832 <__fp_splitA+0x1a>
 816:	47 95       	ror	r20

00000818 <__fp_splitA>:
 818:	88 0f       	add	r24, r24
 81a:	97 fb       	bst	r25, 7
 81c:	99 1f       	adc	r25, r25
 81e:	61 f0       	breq	.+24     	; 0x838 <__fp_splitA+0x20>
 820:	9f 3f       	cpi	r25, 0xFF	; 255
 822:	79 f0       	breq	.+30     	; 0x842 <__fp_splitA+0x2a>
 824:	87 95       	ror	r24
 826:	08 95       	ret
 828:	12 16       	cp	r1, r18
 82a:	13 06       	cpc	r1, r19
 82c:	14 06       	cpc	r1, r20
 82e:	55 1f       	adc	r21, r21
 830:	f2 cf       	rjmp	.-28     	; 0x816 <__fp_split3+0xe>
 832:	46 95       	lsr	r20
 834:	f1 df       	rcall	.-30     	; 0x818 <__fp_splitA>
 836:	08 c0       	rjmp	.+16     	; 0x848 <__fp_splitA+0x30>
 838:	16 16       	cp	r1, r22
 83a:	17 06       	cpc	r1, r23
 83c:	18 06       	cpc	r1, r24
 83e:	99 1f       	adc	r25, r25
 840:	f1 cf       	rjmp	.-30     	; 0x824 <__fp_splitA+0xc>
 842:	86 95       	lsr	r24
 844:	71 05       	cpc	r23, r1
 846:	61 05       	cpc	r22, r1
 848:	08 94       	sec
 84a:	08 95       	ret

0000084c <__fp_zero>:
 84c:	e8 94       	clt

0000084e <__fp_szero>:
 84e:	bb 27       	eor	r27, r27
 850:	66 27       	eor	r22, r22
 852:	77 27       	eor	r23, r23
 854:	cb 01       	movw	r24, r22
 856:	97 f9       	bld	r25, 7
 858:	08 95       	ret

0000085a <__mulsf3>:
 85a:	0e 94 40 04 	call	0x880	; 0x880 <__mulsf3x>
 85e:	0c 94 b1 04 	jmp	0x962	; 0x962 <__fp_round>
 862:	0e 94 a3 04 	call	0x946	; 0x946 <__fp_pscA>
 866:	38 f0       	brcs	.+14     	; 0x876 <__stack+0x17>
 868:	0e 94 aa 04 	call	0x954	; 0x954 <__fp_pscB>
 86c:	20 f0       	brcs	.+8      	; 0x876 <__stack+0x17>
 86e:	95 23       	and	r25, r21
 870:	11 f0       	breq	.+4      	; 0x876 <__stack+0x17>
 872:	0c 94 9a 04 	jmp	0x934	; 0x934 <__fp_inf>
 876:	0c 94 a0 04 	jmp	0x940	; 0x940 <__fp_nan>
 87a:	11 24       	eor	r1, r1
 87c:	0c 94 27 04 	jmp	0x84e	; 0x84e <__fp_szero>

00000880 <__mulsf3x>:
 880:	0e 94 04 04 	call	0x808	; 0x808 <__fp_split3>
 884:	70 f3       	brcs	.-36     	; 0x862 <__stack+0x3>

00000886 <__mulsf3_pse>:
 886:	95 9f       	mul	r25, r21
 888:	c1 f3       	breq	.-16     	; 0x87a <__stack+0x1b>
 88a:	95 0f       	add	r25, r21
 88c:	50 e0       	ldi	r21, 0x00	; 0
 88e:	55 1f       	adc	r21, r21
 890:	62 9f       	mul	r22, r18
 892:	f0 01       	movw	r30, r0
 894:	72 9f       	mul	r23, r18
 896:	bb 27       	eor	r27, r27
 898:	f0 0d       	add	r31, r0
 89a:	b1 1d       	adc	r27, r1
 89c:	63 9f       	mul	r22, r19
 89e:	aa 27       	eor	r26, r26
 8a0:	f0 0d       	add	r31, r0
 8a2:	b1 1d       	adc	r27, r1
 8a4:	aa 1f       	adc	r26, r26
 8a6:	64 9f       	mul	r22, r20
 8a8:	66 27       	eor	r22, r22
 8aa:	b0 0d       	add	r27, r0
 8ac:	a1 1d       	adc	r26, r1
 8ae:	66 1f       	adc	r22, r22
 8b0:	82 9f       	mul	r24, r18
 8b2:	22 27       	eor	r18, r18
 8b4:	b0 0d       	add	r27, r0
 8b6:	a1 1d       	adc	r26, r1
 8b8:	62 1f       	adc	r22, r18
 8ba:	73 9f       	mul	r23, r19
 8bc:	b0 0d       	add	r27, r0
 8be:	a1 1d       	adc	r26, r1
 8c0:	62 1f       	adc	r22, r18
 8c2:	83 9f       	mul	r24, r19
 8c4:	a0 0d       	add	r26, r0
 8c6:	61 1d       	adc	r22, r1
 8c8:	22 1f       	adc	r18, r18
 8ca:	74 9f       	mul	r23, r20
 8cc:	33 27       	eor	r19, r19
 8ce:	a0 0d       	add	r26, r0
 8d0:	61 1d       	adc	r22, r1
 8d2:	23 1f       	adc	r18, r19
 8d4:	84 9f       	mul	r24, r20
 8d6:	60 0d       	add	r22, r0
 8d8:	21 1d       	adc	r18, r1
 8da:	82 2f       	mov	r24, r18
 8dc:	76 2f       	mov	r23, r22
 8de:	6a 2f       	mov	r22, r26
 8e0:	11 24       	eor	r1, r1
 8e2:	9f 57       	subi	r25, 0x7F	; 127
 8e4:	50 40       	sbci	r21, 0x00	; 0
 8e6:	9a f0       	brmi	.+38     	; 0x90e <__mulsf3_pse+0x88>
 8e8:	f1 f0       	breq	.+60     	; 0x926 <__mulsf3_pse+0xa0>
 8ea:	88 23       	and	r24, r24
 8ec:	4a f0       	brmi	.+18     	; 0x900 <__mulsf3_pse+0x7a>
 8ee:	ee 0f       	add	r30, r30
 8f0:	ff 1f       	adc	r31, r31
 8f2:	bb 1f       	adc	r27, r27
 8f4:	66 1f       	adc	r22, r22
 8f6:	77 1f       	adc	r23, r23
 8f8:	88 1f       	adc	r24, r24
 8fa:	91 50       	subi	r25, 0x01	; 1
 8fc:	50 40       	sbci	r21, 0x00	; 0
 8fe:	a9 f7       	brne	.-22     	; 0x8ea <__mulsf3_pse+0x64>
 900:	9e 3f       	cpi	r25, 0xFE	; 254
 902:	51 05       	cpc	r21, r1
 904:	80 f0       	brcs	.+32     	; 0x926 <__mulsf3_pse+0xa0>
 906:	0c 94 9a 04 	jmp	0x934	; 0x934 <__fp_inf>
 90a:	0c 94 27 04 	jmp	0x84e	; 0x84e <__fp_szero>
 90e:	5f 3f       	cpi	r21, 0xFF	; 255
 910:	e4 f3       	brlt	.-8      	; 0x90a <__mulsf3_pse+0x84>
 912:	98 3e       	cpi	r25, 0xE8	; 232
 914:	d4 f3       	brlt	.-12     	; 0x90a <__mulsf3_pse+0x84>
 916:	86 95       	lsr	r24
 918:	77 95       	ror	r23
 91a:	67 95       	ror	r22
 91c:	b7 95       	ror	r27
 91e:	f7 95       	ror	r31
 920:	e7 95       	ror	r30
 922:	9f 5f       	subi	r25, 0xFF	; 255
 924:	c1 f7       	brne	.-16     	; 0x916 <__mulsf3_pse+0x90>
 926:	fe 2b       	or	r31, r30
 928:	88 0f       	add	r24, r24
 92a:	91 1d       	adc	r25, r1
 92c:	96 95       	lsr	r25
 92e:	87 95       	ror	r24
 930:	97 f9       	bld	r25, 7
 932:	08 95       	ret

00000934 <__fp_inf>:
 934:	97 f9       	bld	r25, 7
 936:	9f 67       	ori	r25, 0x7F	; 127
 938:	80 e8       	ldi	r24, 0x80	; 128
 93a:	70 e0       	ldi	r23, 0x00	; 0
 93c:	60 e0       	ldi	r22, 0x00	; 0
 93e:	08 95       	ret

00000940 <__fp_nan>:
 940:	9f ef       	ldi	r25, 0xFF	; 255
 942:	80 ec       	ldi	r24, 0xC0	; 192
 944:	08 95       	ret

00000946 <__fp_pscA>:
 946:	00 24       	eor	r0, r0
 948:	0a 94       	dec	r0
 94a:	16 16       	cp	r1, r22
 94c:	17 06       	cpc	r1, r23
 94e:	18 06       	cpc	r1, r24
 950:	09 06       	cpc	r0, r25
 952:	08 95       	ret

00000954 <__fp_pscB>:
 954:	00 24       	eor	r0, r0
 956:	0a 94       	dec	r0
 958:	12 16       	cp	r1, r18
 95a:	13 06       	cpc	r1, r19
 95c:	14 06       	cpc	r1, r20
 95e:	05 06       	cpc	r0, r21
 960:	08 95       	ret

00000962 <__fp_round>:
 962:	09 2e       	mov	r0, r25
 964:	03 94       	inc	r0
 966:	00 0c       	add	r0, r0
 968:	11 f4       	brne	.+4      	; 0x96e <__fp_round+0xc>
 96a:	88 23       	and	r24, r24
 96c:	52 f0       	brmi	.+20     	; 0x982 <__fp_round+0x20>
 96e:	bb 0f       	add	r27, r27
 970:	40 f4       	brcc	.+16     	; 0x982 <__fp_round+0x20>
 972:	bf 2b       	or	r27, r31
 974:	11 f4       	brne	.+4      	; 0x97a <__fp_round+0x18>
 976:	60 ff       	sbrs	r22, 0
 978:	04 c0       	rjmp	.+8      	; 0x982 <__fp_round+0x20>
 97a:	6f 5f       	subi	r22, 0xFF	; 255
 97c:	7f 4f       	sbci	r23, 0xFF	; 255
 97e:	8f 4f       	sbci	r24, 0xFF	; 255
 980:	9f 4f       	sbci	r25, 0xFF	; 255
 982:	08 95       	ret

00000984 <sprintf>:
 984:	ae e0       	ldi	r26, 0x0E	; 14
 986:	b0 e0       	ldi	r27, 0x00	; 0
 988:	e8 ec       	ldi	r30, 0xC8	; 200
 98a:	f4 e0       	ldi	r31, 0x04	; 4
 98c:	0c 94 71 07 	jmp	0xee2	; 0xee2 <__prologue_saves__+0x1c>
 990:	0d 89       	ldd	r16, Y+21	; 0x15
 992:	1e 89       	ldd	r17, Y+22	; 0x16
 994:	86 e0       	ldi	r24, 0x06	; 6
 996:	8c 83       	std	Y+4, r24	; 0x04
 998:	1a 83       	std	Y+2, r17	; 0x02
 99a:	09 83       	std	Y+1, r16	; 0x01
 99c:	8f ef       	ldi	r24, 0xFF	; 255
 99e:	9f e7       	ldi	r25, 0x7F	; 127
 9a0:	9e 83       	std	Y+6, r25	; 0x06
 9a2:	8d 83       	std	Y+5, r24	; 0x05
 9a4:	ae 01       	movw	r20, r28
 9a6:	47 5e       	subi	r20, 0xE7	; 231
 9a8:	5f 4f       	sbci	r21, 0xFF	; 255
 9aa:	6f 89       	ldd	r22, Y+23	; 0x17
 9ac:	78 8d       	ldd	r23, Y+24	; 0x18
 9ae:	ce 01       	movw	r24, r28
 9b0:	01 96       	adiw	r24, 0x01	; 1
 9b2:	0e 94 e5 04 	call	0x9ca	; 0x9ca <vfprintf>
 9b6:	2f 81       	ldd	r18, Y+7	; 0x07
 9b8:	38 85       	ldd	r19, Y+8	; 0x08
 9ba:	f8 01       	movw	r30, r16
 9bc:	e2 0f       	add	r30, r18
 9be:	f3 1f       	adc	r31, r19
 9c0:	10 82       	st	Z, r1
 9c2:	2e 96       	adiw	r28, 0x0e	; 14
 9c4:	e4 e0       	ldi	r30, 0x04	; 4
 9c6:	0c 94 8d 07 	jmp	0xf1a	; 0xf1a <__epilogue_restores__+0x1c>

000009ca <vfprintf>:
 9ca:	ac e0       	ldi	r26, 0x0C	; 12
 9cc:	b0 e0       	ldi	r27, 0x00	; 0
 9ce:	eb ee       	ldi	r30, 0xEB	; 235
 9d0:	f4 e0       	ldi	r31, 0x04	; 4
 9d2:	0c 94 63 07 	jmp	0xec6	; 0xec6 <__prologue_saves__>
 9d6:	7c 01       	movw	r14, r24
 9d8:	6b 01       	movw	r12, r22
 9da:	8a 01       	movw	r16, r20
 9dc:	fc 01       	movw	r30, r24
 9de:	17 82       	std	Z+7, r1	; 0x07
 9e0:	16 82       	std	Z+6, r1	; 0x06
 9e2:	83 81       	ldd	r24, Z+3	; 0x03
 9e4:	81 ff       	sbrs	r24, 1
 9e6:	bd c1       	rjmp	.+890    	; 0xd62 <vfprintf+0x398>
 9e8:	ce 01       	movw	r24, r28
 9ea:	01 96       	adiw	r24, 0x01	; 1
 9ec:	4c 01       	movw	r8, r24
 9ee:	f7 01       	movw	r30, r14
 9f0:	93 81       	ldd	r25, Z+3	; 0x03
 9f2:	f6 01       	movw	r30, r12
 9f4:	93 fd       	sbrc	r25, 3
 9f6:	85 91       	lpm	r24, Z+
 9f8:	93 ff       	sbrs	r25, 3
 9fa:	81 91       	ld	r24, Z+
 9fc:	6f 01       	movw	r12, r30
 9fe:	88 23       	and	r24, r24
 a00:	09 f4       	brne	.+2      	; 0xa04 <vfprintf+0x3a>
 a02:	ab c1       	rjmp	.+854    	; 0xd5a <vfprintf+0x390>
 a04:	85 32       	cpi	r24, 0x25	; 37
 a06:	39 f4       	brne	.+14     	; 0xa16 <vfprintf+0x4c>
 a08:	93 fd       	sbrc	r25, 3
 a0a:	85 91       	lpm	r24, Z+
 a0c:	93 ff       	sbrs	r25, 3
 a0e:	81 91       	ld	r24, Z+
 a10:	6f 01       	movw	r12, r30
 a12:	85 32       	cpi	r24, 0x25	; 37
 a14:	29 f4       	brne	.+10     	; 0xa20 <vfprintf+0x56>
 a16:	b7 01       	movw	r22, r14
 a18:	90 e0       	ldi	r25, 0x00	; 0
 a1a:	0e 94 cd 06 	call	0xd9a	; 0xd9a <fputc>
 a1e:	e7 cf       	rjmp	.-50     	; 0x9ee <vfprintf+0x24>
 a20:	51 2c       	mov	r5, r1
 a22:	31 2c       	mov	r3, r1
 a24:	20 e0       	ldi	r18, 0x00	; 0
 a26:	20 32       	cpi	r18, 0x20	; 32
 a28:	a0 f4       	brcc	.+40     	; 0xa52 <vfprintf+0x88>
 a2a:	8b 32       	cpi	r24, 0x2B	; 43
 a2c:	69 f0       	breq	.+26     	; 0xa48 <vfprintf+0x7e>
 a2e:	30 f4       	brcc	.+12     	; 0xa3c <vfprintf+0x72>
 a30:	80 32       	cpi	r24, 0x20	; 32
 a32:	59 f0       	breq	.+22     	; 0xa4a <vfprintf+0x80>
 a34:	83 32       	cpi	r24, 0x23	; 35
 a36:	69 f4       	brne	.+26     	; 0xa52 <vfprintf+0x88>
 a38:	20 61       	ori	r18, 0x10	; 16
 a3a:	2c c0       	rjmp	.+88     	; 0xa94 <vfprintf+0xca>
 a3c:	8d 32       	cpi	r24, 0x2D	; 45
 a3e:	39 f0       	breq	.+14     	; 0xa4e <vfprintf+0x84>
 a40:	80 33       	cpi	r24, 0x30	; 48
 a42:	39 f4       	brne	.+14     	; 0xa52 <vfprintf+0x88>
 a44:	21 60       	ori	r18, 0x01	; 1
 a46:	26 c0       	rjmp	.+76     	; 0xa94 <vfprintf+0xca>
 a48:	22 60       	ori	r18, 0x02	; 2
 a4a:	24 60       	ori	r18, 0x04	; 4
 a4c:	23 c0       	rjmp	.+70     	; 0xa94 <vfprintf+0xca>
 a4e:	28 60       	ori	r18, 0x08	; 8
 a50:	21 c0       	rjmp	.+66     	; 0xa94 <vfprintf+0xca>
 a52:	27 fd       	sbrc	r18, 7
 a54:	27 c0       	rjmp	.+78     	; 0xaa4 <vfprintf+0xda>
 a56:	30 ed       	ldi	r19, 0xD0	; 208
 a58:	38 0f       	add	r19, r24
 a5a:	3a 30       	cpi	r19, 0x0A	; 10
 a5c:	78 f4       	brcc	.+30     	; 0xa7c <vfprintf+0xb2>
 a5e:	26 ff       	sbrs	r18, 6
 a60:	06 c0       	rjmp	.+12     	; 0xa6e <vfprintf+0xa4>
 a62:	fa e0       	ldi	r31, 0x0A	; 10
 a64:	5f 9e       	mul	r5, r31
 a66:	30 0d       	add	r19, r0
 a68:	11 24       	eor	r1, r1
 a6a:	53 2e       	mov	r5, r19
 a6c:	13 c0       	rjmp	.+38     	; 0xa94 <vfprintf+0xca>
 a6e:	8a e0       	ldi	r24, 0x0A	; 10
 a70:	38 9e       	mul	r3, r24
 a72:	30 0d       	add	r19, r0
 a74:	11 24       	eor	r1, r1
 a76:	33 2e       	mov	r3, r19
 a78:	20 62       	ori	r18, 0x20	; 32
 a7a:	0c c0       	rjmp	.+24     	; 0xa94 <vfprintf+0xca>
 a7c:	8e 32       	cpi	r24, 0x2E	; 46
 a7e:	21 f4       	brne	.+8      	; 0xa88 <vfprintf+0xbe>
 a80:	26 fd       	sbrc	r18, 6
 a82:	6b c1       	rjmp	.+726    	; 0xd5a <vfprintf+0x390>
 a84:	20 64       	ori	r18, 0x40	; 64
 a86:	06 c0       	rjmp	.+12     	; 0xa94 <vfprintf+0xca>
 a88:	8c 36       	cpi	r24, 0x6C	; 108
 a8a:	11 f4       	brne	.+4      	; 0xa90 <vfprintf+0xc6>
 a8c:	20 68       	ori	r18, 0x80	; 128
 a8e:	02 c0       	rjmp	.+4      	; 0xa94 <vfprintf+0xca>
 a90:	88 36       	cpi	r24, 0x68	; 104
 a92:	41 f4       	brne	.+16     	; 0xaa4 <vfprintf+0xda>
 a94:	f6 01       	movw	r30, r12
 a96:	93 fd       	sbrc	r25, 3
 a98:	85 91       	lpm	r24, Z+
 a9a:	93 ff       	sbrs	r25, 3
 a9c:	81 91       	ld	r24, Z+
 a9e:	6f 01       	movw	r12, r30
 aa0:	81 11       	cpse	r24, r1
 aa2:	c1 cf       	rjmp	.-126    	; 0xa26 <vfprintf+0x5c>
 aa4:	98 2f       	mov	r25, r24
 aa6:	9f 7d       	andi	r25, 0xDF	; 223
 aa8:	95 54       	subi	r25, 0x45	; 69
 aaa:	93 30       	cpi	r25, 0x03	; 3
 aac:	28 f4       	brcc	.+10     	; 0xab8 <vfprintf+0xee>
 aae:	0c 5f       	subi	r16, 0xFC	; 252
 ab0:	1f 4f       	sbci	r17, 0xFF	; 255
 ab2:	ff e3       	ldi	r31, 0x3F	; 63
 ab4:	f9 83       	std	Y+1, r31	; 0x01
 ab6:	0d c0       	rjmp	.+26     	; 0xad2 <vfprintf+0x108>
 ab8:	83 36       	cpi	r24, 0x63	; 99
 aba:	31 f0       	breq	.+12     	; 0xac8 <vfprintf+0xfe>
 abc:	83 37       	cpi	r24, 0x73	; 115
 abe:	71 f0       	breq	.+28     	; 0xadc <vfprintf+0x112>
 ac0:	83 35       	cpi	r24, 0x53	; 83
 ac2:	09 f0       	breq	.+2      	; 0xac6 <vfprintf+0xfc>
 ac4:	5b c0       	rjmp	.+182    	; 0xb7c <vfprintf+0x1b2>
 ac6:	22 c0       	rjmp	.+68     	; 0xb0c <vfprintf+0x142>
 ac8:	f8 01       	movw	r30, r16
 aca:	80 81       	ld	r24, Z
 acc:	89 83       	std	Y+1, r24	; 0x01
 ace:	0e 5f       	subi	r16, 0xFE	; 254
 ad0:	1f 4f       	sbci	r17, 0xFF	; 255
 ad2:	44 24       	eor	r4, r4
 ad4:	43 94       	inc	r4
 ad6:	51 2c       	mov	r5, r1
 ad8:	54 01       	movw	r10, r8
 ada:	15 c0       	rjmp	.+42     	; 0xb06 <vfprintf+0x13c>
 adc:	38 01       	movw	r6, r16
 ade:	f2 e0       	ldi	r31, 0x02	; 2
 ae0:	6f 0e       	add	r6, r31
 ae2:	71 1c       	adc	r7, r1
 ae4:	f8 01       	movw	r30, r16
 ae6:	a0 80       	ld	r10, Z
 ae8:	b1 80       	ldd	r11, Z+1	; 0x01
 aea:	26 ff       	sbrs	r18, 6
 aec:	03 c0       	rjmp	.+6      	; 0xaf4 <vfprintf+0x12a>
 aee:	65 2d       	mov	r22, r5
 af0:	70 e0       	ldi	r23, 0x00	; 0
 af2:	02 c0       	rjmp	.+4      	; 0xaf8 <vfprintf+0x12e>
 af4:	6f ef       	ldi	r22, 0xFF	; 255
 af6:	7f ef       	ldi	r23, 0xFF	; 255
 af8:	c5 01       	movw	r24, r10
 afa:	2c 87       	std	Y+12, r18	; 0x0c
 afc:	0e 94 c2 06 	call	0xd84	; 0xd84 <strnlen>
 b00:	2c 01       	movw	r4, r24
 b02:	83 01       	movw	r16, r6
 b04:	2c 85       	ldd	r18, Y+12	; 0x0c
 b06:	2f 77       	andi	r18, 0x7F	; 127
 b08:	22 2e       	mov	r2, r18
 b0a:	17 c0       	rjmp	.+46     	; 0xb3a <vfprintf+0x170>
 b0c:	38 01       	movw	r6, r16
 b0e:	f2 e0       	ldi	r31, 0x02	; 2
 b10:	6f 0e       	add	r6, r31
 b12:	71 1c       	adc	r7, r1
 b14:	f8 01       	movw	r30, r16
 b16:	a0 80       	ld	r10, Z
 b18:	b1 80       	ldd	r11, Z+1	; 0x01
 b1a:	26 ff       	sbrs	r18, 6
 b1c:	03 c0       	rjmp	.+6      	; 0xb24 <vfprintf+0x15a>
 b1e:	65 2d       	mov	r22, r5
 b20:	70 e0       	ldi	r23, 0x00	; 0
 b22:	02 c0       	rjmp	.+4      	; 0xb28 <vfprintf+0x15e>
 b24:	6f ef       	ldi	r22, 0xFF	; 255
 b26:	7f ef       	ldi	r23, 0xFF	; 255
 b28:	c5 01       	movw	r24, r10
 b2a:	2c 87       	std	Y+12, r18	; 0x0c
 b2c:	0e 94 b7 06 	call	0xd6e	; 0xd6e <strnlen_P>
 b30:	2c 01       	movw	r4, r24
 b32:	2c 85       	ldd	r18, Y+12	; 0x0c
 b34:	20 68       	ori	r18, 0x80	; 128
 b36:	22 2e       	mov	r2, r18
 b38:	83 01       	movw	r16, r6
 b3a:	23 fc       	sbrc	r2, 3
 b3c:	1b c0       	rjmp	.+54     	; 0xb74 <vfprintf+0x1aa>
 b3e:	83 2d       	mov	r24, r3
 b40:	90 e0       	ldi	r25, 0x00	; 0
 b42:	48 16       	cp	r4, r24
 b44:	59 06       	cpc	r5, r25
 b46:	b0 f4       	brcc	.+44     	; 0xb74 <vfprintf+0x1aa>
 b48:	b7 01       	movw	r22, r14
 b4a:	80 e2       	ldi	r24, 0x20	; 32
 b4c:	90 e0       	ldi	r25, 0x00	; 0
 b4e:	0e 94 cd 06 	call	0xd9a	; 0xd9a <fputc>
 b52:	3a 94       	dec	r3
 b54:	f4 cf       	rjmp	.-24     	; 0xb3e <vfprintf+0x174>
 b56:	f5 01       	movw	r30, r10
 b58:	27 fc       	sbrc	r2, 7
 b5a:	85 91       	lpm	r24, Z+
 b5c:	27 fe       	sbrs	r2, 7
 b5e:	81 91       	ld	r24, Z+
 b60:	5f 01       	movw	r10, r30
 b62:	b7 01       	movw	r22, r14
 b64:	90 e0       	ldi	r25, 0x00	; 0
 b66:	0e 94 cd 06 	call	0xd9a	; 0xd9a <fputc>
 b6a:	31 10       	cpse	r3, r1
 b6c:	3a 94       	dec	r3
 b6e:	f1 e0       	ldi	r31, 0x01	; 1
 b70:	4f 1a       	sub	r4, r31
 b72:	51 08       	sbc	r5, r1
 b74:	41 14       	cp	r4, r1
 b76:	51 04       	cpc	r5, r1
 b78:	71 f7       	brne	.-36     	; 0xb56 <vfprintf+0x18c>
 b7a:	e5 c0       	rjmp	.+458    	; 0xd46 <vfprintf+0x37c>
 b7c:	84 36       	cpi	r24, 0x64	; 100
 b7e:	11 f0       	breq	.+4      	; 0xb84 <vfprintf+0x1ba>
 b80:	89 36       	cpi	r24, 0x69	; 105
 b82:	39 f5       	brne	.+78     	; 0xbd2 <vfprintf+0x208>
 b84:	f8 01       	movw	r30, r16
 b86:	27 ff       	sbrs	r18, 7
 b88:	07 c0       	rjmp	.+14     	; 0xb98 <vfprintf+0x1ce>
 b8a:	60 81       	ld	r22, Z
 b8c:	71 81       	ldd	r23, Z+1	; 0x01
 b8e:	82 81       	ldd	r24, Z+2	; 0x02
 b90:	93 81       	ldd	r25, Z+3	; 0x03
 b92:	0c 5f       	subi	r16, 0xFC	; 252
 b94:	1f 4f       	sbci	r17, 0xFF	; 255
 b96:	08 c0       	rjmp	.+16     	; 0xba8 <vfprintf+0x1de>
 b98:	60 81       	ld	r22, Z
 b9a:	71 81       	ldd	r23, Z+1	; 0x01
 b9c:	07 2e       	mov	r0, r23
 b9e:	00 0c       	add	r0, r0
 ba0:	88 0b       	sbc	r24, r24
 ba2:	99 0b       	sbc	r25, r25
 ba4:	0e 5f       	subi	r16, 0xFE	; 254
 ba6:	1f 4f       	sbci	r17, 0xFF	; 255
 ba8:	2f 76       	andi	r18, 0x6F	; 111
 baa:	72 2e       	mov	r7, r18
 bac:	97 ff       	sbrs	r25, 7
 bae:	09 c0       	rjmp	.+18     	; 0xbc2 <vfprintf+0x1f8>
 bb0:	90 95       	com	r25
 bb2:	80 95       	com	r24
 bb4:	70 95       	com	r23
 bb6:	61 95       	neg	r22
 bb8:	7f 4f       	sbci	r23, 0xFF	; 255
 bba:	8f 4f       	sbci	r24, 0xFF	; 255
 bbc:	9f 4f       	sbci	r25, 0xFF	; 255
 bbe:	20 68       	ori	r18, 0x80	; 128
 bc0:	72 2e       	mov	r7, r18
 bc2:	2a e0       	ldi	r18, 0x0A	; 10
 bc4:	30 e0       	ldi	r19, 0x00	; 0
 bc6:	a4 01       	movw	r20, r8
 bc8:	0e 94 05 07 	call	0xe0a	; 0xe0a <__ultoa_invert>
 bcc:	a8 2e       	mov	r10, r24
 bce:	a8 18       	sub	r10, r8
 bd0:	44 c0       	rjmp	.+136    	; 0xc5a <vfprintf+0x290>
 bd2:	85 37       	cpi	r24, 0x75	; 117
 bd4:	29 f4       	brne	.+10     	; 0xbe0 <vfprintf+0x216>
 bd6:	2f 7e       	andi	r18, 0xEF	; 239
 bd8:	b2 2e       	mov	r11, r18
 bda:	2a e0       	ldi	r18, 0x0A	; 10
 bdc:	30 e0       	ldi	r19, 0x00	; 0
 bde:	25 c0       	rjmp	.+74     	; 0xc2a <vfprintf+0x260>
 be0:	f2 2f       	mov	r31, r18
 be2:	f9 7f       	andi	r31, 0xF9	; 249
 be4:	bf 2e       	mov	r11, r31
 be6:	8f 36       	cpi	r24, 0x6F	; 111
 be8:	c1 f0       	breq	.+48     	; 0xc1a <vfprintf+0x250>
 bea:	18 f4       	brcc	.+6      	; 0xbf2 <vfprintf+0x228>
 bec:	88 35       	cpi	r24, 0x58	; 88
 bee:	79 f0       	breq	.+30     	; 0xc0e <vfprintf+0x244>
 bf0:	b4 c0       	rjmp	.+360    	; 0xd5a <vfprintf+0x390>
 bf2:	80 37       	cpi	r24, 0x70	; 112
 bf4:	19 f0       	breq	.+6      	; 0xbfc <vfprintf+0x232>
 bf6:	88 37       	cpi	r24, 0x78	; 120
 bf8:	21 f0       	breq	.+8      	; 0xc02 <vfprintf+0x238>
 bfa:	af c0       	rjmp	.+350    	; 0xd5a <vfprintf+0x390>
 bfc:	2f 2f       	mov	r18, r31
 bfe:	20 61       	ori	r18, 0x10	; 16
 c00:	b2 2e       	mov	r11, r18
 c02:	b4 fe       	sbrs	r11, 4
 c04:	0d c0       	rjmp	.+26     	; 0xc20 <vfprintf+0x256>
 c06:	8b 2d       	mov	r24, r11
 c08:	84 60       	ori	r24, 0x04	; 4
 c0a:	b8 2e       	mov	r11, r24
 c0c:	09 c0       	rjmp	.+18     	; 0xc20 <vfprintf+0x256>
 c0e:	24 ff       	sbrs	r18, 4
 c10:	0a c0       	rjmp	.+20     	; 0xc26 <vfprintf+0x25c>
 c12:	9f 2f       	mov	r25, r31
 c14:	96 60       	ori	r25, 0x06	; 6
 c16:	b9 2e       	mov	r11, r25
 c18:	06 c0       	rjmp	.+12     	; 0xc26 <vfprintf+0x25c>
 c1a:	28 e0       	ldi	r18, 0x08	; 8
 c1c:	30 e0       	ldi	r19, 0x00	; 0
 c1e:	05 c0       	rjmp	.+10     	; 0xc2a <vfprintf+0x260>
 c20:	20 e1       	ldi	r18, 0x10	; 16
 c22:	30 e0       	ldi	r19, 0x00	; 0
 c24:	02 c0       	rjmp	.+4      	; 0xc2a <vfprintf+0x260>
 c26:	20 e1       	ldi	r18, 0x10	; 16
 c28:	32 e0       	ldi	r19, 0x02	; 2
 c2a:	f8 01       	movw	r30, r16
 c2c:	b7 fe       	sbrs	r11, 7
 c2e:	07 c0       	rjmp	.+14     	; 0xc3e <vfprintf+0x274>
 c30:	60 81       	ld	r22, Z
 c32:	71 81       	ldd	r23, Z+1	; 0x01
 c34:	82 81       	ldd	r24, Z+2	; 0x02
 c36:	93 81       	ldd	r25, Z+3	; 0x03
 c38:	0c 5f       	subi	r16, 0xFC	; 252
 c3a:	1f 4f       	sbci	r17, 0xFF	; 255
 c3c:	06 c0       	rjmp	.+12     	; 0xc4a <vfprintf+0x280>
 c3e:	60 81       	ld	r22, Z
 c40:	71 81       	ldd	r23, Z+1	; 0x01
 c42:	80 e0       	ldi	r24, 0x00	; 0
 c44:	90 e0       	ldi	r25, 0x00	; 0
 c46:	0e 5f       	subi	r16, 0xFE	; 254
 c48:	1f 4f       	sbci	r17, 0xFF	; 255
 c4a:	a4 01       	movw	r20, r8
 c4c:	0e 94 05 07 	call	0xe0a	; 0xe0a <__ultoa_invert>
 c50:	a8 2e       	mov	r10, r24
 c52:	a8 18       	sub	r10, r8
 c54:	fb 2d       	mov	r31, r11
 c56:	ff 77       	andi	r31, 0x7F	; 127
 c58:	7f 2e       	mov	r7, r31
 c5a:	76 fe       	sbrs	r7, 6
 c5c:	0b c0       	rjmp	.+22     	; 0xc74 <vfprintf+0x2aa>
 c5e:	37 2d       	mov	r19, r7
 c60:	3e 7f       	andi	r19, 0xFE	; 254
 c62:	a5 14       	cp	r10, r5
 c64:	50 f4       	brcc	.+20     	; 0xc7a <vfprintf+0x2b0>
 c66:	74 fe       	sbrs	r7, 4
 c68:	0a c0       	rjmp	.+20     	; 0xc7e <vfprintf+0x2b4>
 c6a:	72 fc       	sbrc	r7, 2
 c6c:	08 c0       	rjmp	.+16     	; 0xc7e <vfprintf+0x2b4>
 c6e:	37 2d       	mov	r19, r7
 c70:	3e 7e       	andi	r19, 0xEE	; 238
 c72:	05 c0       	rjmp	.+10     	; 0xc7e <vfprintf+0x2b4>
 c74:	ba 2c       	mov	r11, r10
 c76:	37 2d       	mov	r19, r7
 c78:	03 c0       	rjmp	.+6      	; 0xc80 <vfprintf+0x2b6>
 c7a:	ba 2c       	mov	r11, r10
 c7c:	01 c0       	rjmp	.+2      	; 0xc80 <vfprintf+0x2b6>
 c7e:	b5 2c       	mov	r11, r5
 c80:	34 ff       	sbrs	r19, 4
 c82:	0d c0       	rjmp	.+26     	; 0xc9e <vfprintf+0x2d4>
 c84:	fe 01       	movw	r30, r28
 c86:	ea 0d       	add	r30, r10
 c88:	f1 1d       	adc	r31, r1
 c8a:	80 81       	ld	r24, Z
 c8c:	80 33       	cpi	r24, 0x30	; 48
 c8e:	11 f4       	brne	.+4      	; 0xc94 <vfprintf+0x2ca>
 c90:	39 7e       	andi	r19, 0xE9	; 233
 c92:	09 c0       	rjmp	.+18     	; 0xca6 <vfprintf+0x2dc>
 c94:	32 ff       	sbrs	r19, 2
 c96:	06 c0       	rjmp	.+12     	; 0xca4 <vfprintf+0x2da>
 c98:	b3 94       	inc	r11
 c9a:	b3 94       	inc	r11
 c9c:	04 c0       	rjmp	.+8      	; 0xca6 <vfprintf+0x2dc>
 c9e:	83 2f       	mov	r24, r19
 ca0:	86 78       	andi	r24, 0x86	; 134
 ca2:	09 f0       	breq	.+2      	; 0xca6 <vfprintf+0x2dc>
 ca4:	b3 94       	inc	r11
 ca6:	33 fd       	sbrc	r19, 3
 ca8:	13 c0       	rjmp	.+38     	; 0xcd0 <vfprintf+0x306>
 caa:	30 ff       	sbrs	r19, 0
 cac:	06 c0       	rjmp	.+12     	; 0xcba <vfprintf+0x2f0>
 cae:	5a 2c       	mov	r5, r10
 cb0:	b3 14       	cp	r11, r3
 cb2:	18 f4       	brcc	.+6      	; 0xcba <vfprintf+0x2f0>
 cb4:	53 0c       	add	r5, r3
 cb6:	5b 18       	sub	r5, r11
 cb8:	b3 2c       	mov	r11, r3
 cba:	b3 14       	cp	r11, r3
 cbc:	68 f4       	brcc	.+26     	; 0xcd8 <vfprintf+0x30e>
 cbe:	b7 01       	movw	r22, r14
 cc0:	80 e2       	ldi	r24, 0x20	; 32
 cc2:	90 e0       	ldi	r25, 0x00	; 0
 cc4:	3c 87       	std	Y+12, r19	; 0x0c
 cc6:	0e 94 cd 06 	call	0xd9a	; 0xd9a <fputc>
 cca:	b3 94       	inc	r11
 ccc:	3c 85       	ldd	r19, Y+12	; 0x0c
 cce:	f5 cf       	rjmp	.-22     	; 0xcba <vfprintf+0x2f0>
 cd0:	b3 14       	cp	r11, r3
 cd2:	10 f4       	brcc	.+4      	; 0xcd8 <vfprintf+0x30e>
 cd4:	3b 18       	sub	r3, r11
 cd6:	01 c0       	rjmp	.+2      	; 0xcda <vfprintf+0x310>
 cd8:	31 2c       	mov	r3, r1
 cda:	34 ff       	sbrs	r19, 4
 cdc:	12 c0       	rjmp	.+36     	; 0xd02 <vfprintf+0x338>
 cde:	b7 01       	movw	r22, r14
 ce0:	80 e3       	ldi	r24, 0x30	; 48
 ce2:	90 e0       	ldi	r25, 0x00	; 0
 ce4:	3c 87       	std	Y+12, r19	; 0x0c
 ce6:	0e 94 cd 06 	call	0xd9a	; 0xd9a <fputc>
 cea:	3c 85       	ldd	r19, Y+12	; 0x0c
 cec:	32 ff       	sbrs	r19, 2
 cee:	17 c0       	rjmp	.+46     	; 0xd1e <vfprintf+0x354>
 cf0:	31 fd       	sbrc	r19, 1
 cf2:	03 c0       	rjmp	.+6      	; 0xcfa <vfprintf+0x330>
 cf4:	88 e7       	ldi	r24, 0x78	; 120
 cf6:	90 e0       	ldi	r25, 0x00	; 0
 cf8:	02 c0       	rjmp	.+4      	; 0xcfe <vfprintf+0x334>
 cfa:	88 e5       	ldi	r24, 0x58	; 88
 cfc:	90 e0       	ldi	r25, 0x00	; 0
 cfe:	b7 01       	movw	r22, r14
 d00:	0c c0       	rjmp	.+24     	; 0xd1a <vfprintf+0x350>
 d02:	83 2f       	mov	r24, r19
 d04:	86 78       	andi	r24, 0x86	; 134
 d06:	59 f0       	breq	.+22     	; 0xd1e <vfprintf+0x354>
 d08:	31 ff       	sbrs	r19, 1
 d0a:	02 c0       	rjmp	.+4      	; 0xd10 <vfprintf+0x346>
 d0c:	8b e2       	ldi	r24, 0x2B	; 43
 d0e:	01 c0       	rjmp	.+2      	; 0xd12 <vfprintf+0x348>
 d10:	80 e2       	ldi	r24, 0x20	; 32
 d12:	37 fd       	sbrc	r19, 7
 d14:	8d e2       	ldi	r24, 0x2D	; 45
 d16:	b7 01       	movw	r22, r14
 d18:	90 e0       	ldi	r25, 0x00	; 0
 d1a:	0e 94 cd 06 	call	0xd9a	; 0xd9a <fputc>
 d1e:	a5 14       	cp	r10, r5
 d20:	38 f4       	brcc	.+14     	; 0xd30 <vfprintf+0x366>
 d22:	b7 01       	movw	r22, r14
 d24:	80 e3       	ldi	r24, 0x30	; 48
 d26:	90 e0       	ldi	r25, 0x00	; 0
 d28:	0e 94 cd 06 	call	0xd9a	; 0xd9a <fputc>
 d2c:	5a 94       	dec	r5
 d2e:	f7 cf       	rjmp	.-18     	; 0xd1e <vfprintf+0x354>
 d30:	aa 94       	dec	r10
 d32:	f4 01       	movw	r30, r8
 d34:	ea 0d       	add	r30, r10
 d36:	f1 1d       	adc	r31, r1
 d38:	80 81       	ld	r24, Z
 d3a:	b7 01       	movw	r22, r14
 d3c:	90 e0       	ldi	r25, 0x00	; 0
 d3e:	0e 94 cd 06 	call	0xd9a	; 0xd9a <fputc>
 d42:	a1 10       	cpse	r10, r1
 d44:	f5 cf       	rjmp	.-22     	; 0xd30 <vfprintf+0x366>
 d46:	33 20       	and	r3, r3
 d48:	09 f4       	brne	.+2      	; 0xd4c <vfprintf+0x382>
 d4a:	51 ce       	rjmp	.-862    	; 0x9ee <vfprintf+0x24>
 d4c:	b7 01       	movw	r22, r14
 d4e:	80 e2       	ldi	r24, 0x20	; 32
 d50:	90 e0       	ldi	r25, 0x00	; 0
 d52:	0e 94 cd 06 	call	0xd9a	; 0xd9a <fputc>
 d56:	3a 94       	dec	r3
 d58:	f6 cf       	rjmp	.-20     	; 0xd46 <vfprintf+0x37c>
 d5a:	f7 01       	movw	r30, r14
 d5c:	86 81       	ldd	r24, Z+6	; 0x06
 d5e:	97 81       	ldd	r25, Z+7	; 0x07
 d60:	02 c0       	rjmp	.+4      	; 0xd66 <vfprintf+0x39c>
 d62:	8f ef       	ldi	r24, 0xFF	; 255
 d64:	9f ef       	ldi	r25, 0xFF	; 255
 d66:	2c 96       	adiw	r28, 0x0c	; 12
 d68:	e2 e1       	ldi	r30, 0x12	; 18
 d6a:	0c 94 7f 07 	jmp	0xefe	; 0xefe <__epilogue_restores__>

00000d6e <strnlen_P>:
 d6e:	fc 01       	movw	r30, r24
 d70:	05 90       	lpm	r0, Z+
 d72:	61 50       	subi	r22, 0x01	; 1
 d74:	70 40       	sbci	r23, 0x00	; 0
 d76:	01 10       	cpse	r0, r1
 d78:	d8 f7       	brcc	.-10     	; 0xd70 <strnlen_P+0x2>
 d7a:	80 95       	com	r24
 d7c:	90 95       	com	r25
 d7e:	8e 0f       	add	r24, r30
 d80:	9f 1f       	adc	r25, r31
 d82:	08 95       	ret

00000d84 <strnlen>:
 d84:	fc 01       	movw	r30, r24
 d86:	61 50       	subi	r22, 0x01	; 1
 d88:	70 40       	sbci	r23, 0x00	; 0
 d8a:	01 90       	ld	r0, Z+
 d8c:	01 10       	cpse	r0, r1
 d8e:	d8 f7       	brcc	.-10     	; 0xd86 <strnlen+0x2>
 d90:	80 95       	com	r24
 d92:	90 95       	com	r25
 d94:	8e 0f       	add	r24, r30
 d96:	9f 1f       	adc	r25, r31
 d98:	08 95       	ret

00000d9a <fputc>:
 d9a:	0f 93       	push	r16
 d9c:	1f 93       	push	r17
 d9e:	cf 93       	push	r28
 da0:	df 93       	push	r29
 da2:	fb 01       	movw	r30, r22
 da4:	23 81       	ldd	r18, Z+3	; 0x03
 da6:	21 fd       	sbrc	r18, 1
 da8:	03 c0       	rjmp	.+6      	; 0xdb0 <fputc+0x16>
 daa:	8f ef       	ldi	r24, 0xFF	; 255
 dac:	9f ef       	ldi	r25, 0xFF	; 255
 dae:	28 c0       	rjmp	.+80     	; 0xe00 <fputc+0x66>
 db0:	22 ff       	sbrs	r18, 2
 db2:	16 c0       	rjmp	.+44     	; 0xde0 <fputc+0x46>
 db4:	46 81       	ldd	r20, Z+6	; 0x06
 db6:	57 81       	ldd	r21, Z+7	; 0x07
 db8:	24 81       	ldd	r18, Z+4	; 0x04
 dba:	35 81       	ldd	r19, Z+5	; 0x05
 dbc:	42 17       	cp	r20, r18
 dbe:	53 07       	cpc	r21, r19
 dc0:	44 f4       	brge	.+16     	; 0xdd2 <fputc+0x38>
 dc2:	a0 81       	ld	r26, Z
 dc4:	b1 81       	ldd	r27, Z+1	; 0x01
 dc6:	9d 01       	movw	r18, r26
 dc8:	2f 5f       	subi	r18, 0xFF	; 255
 dca:	3f 4f       	sbci	r19, 0xFF	; 255
 dcc:	31 83       	std	Z+1, r19	; 0x01
 dce:	20 83       	st	Z, r18
 dd0:	8c 93       	st	X, r24
 dd2:	26 81       	ldd	r18, Z+6	; 0x06
 dd4:	37 81       	ldd	r19, Z+7	; 0x07
 dd6:	2f 5f       	subi	r18, 0xFF	; 255
 dd8:	3f 4f       	sbci	r19, 0xFF	; 255
 dda:	37 83       	std	Z+7, r19	; 0x07
 ddc:	26 83       	std	Z+6, r18	; 0x06
 dde:	10 c0       	rjmp	.+32     	; 0xe00 <fputc+0x66>
 de0:	eb 01       	movw	r28, r22
 de2:	09 2f       	mov	r16, r25
 de4:	18 2f       	mov	r17, r24
 de6:	00 84       	ldd	r0, Z+8	; 0x08
 de8:	f1 85       	ldd	r31, Z+9	; 0x09
 dea:	e0 2d       	mov	r30, r0
 dec:	09 95       	icall
 dee:	89 2b       	or	r24, r25
 df0:	e1 f6       	brne	.-72     	; 0xdaa <fputc+0x10>
 df2:	8e 81       	ldd	r24, Y+6	; 0x06
 df4:	9f 81       	ldd	r25, Y+7	; 0x07
 df6:	01 96       	adiw	r24, 0x01	; 1
 df8:	9f 83       	std	Y+7, r25	; 0x07
 dfa:	8e 83       	std	Y+6, r24	; 0x06
 dfc:	81 2f       	mov	r24, r17
 dfe:	90 2f       	mov	r25, r16
 e00:	df 91       	pop	r29
 e02:	cf 91       	pop	r28
 e04:	1f 91       	pop	r17
 e06:	0f 91       	pop	r16
 e08:	08 95       	ret

00000e0a <__ultoa_invert>:
 e0a:	fa 01       	movw	r30, r20
 e0c:	aa 27       	eor	r26, r26
 e0e:	28 30       	cpi	r18, 0x08	; 8
 e10:	51 f1       	breq	.+84     	; 0xe66 <__ultoa_invert+0x5c>
 e12:	20 31       	cpi	r18, 0x10	; 16
 e14:	81 f1       	breq	.+96     	; 0xe76 <__ultoa_invert+0x6c>
 e16:	e8 94       	clt
 e18:	6f 93       	push	r22
 e1a:	6e 7f       	andi	r22, 0xFE	; 254
 e1c:	6e 5f       	subi	r22, 0xFE	; 254
 e1e:	7f 4f       	sbci	r23, 0xFF	; 255
 e20:	8f 4f       	sbci	r24, 0xFF	; 255
 e22:	9f 4f       	sbci	r25, 0xFF	; 255
 e24:	af 4f       	sbci	r26, 0xFF	; 255
 e26:	b1 e0       	ldi	r27, 0x01	; 1
 e28:	3e d0       	rcall	.+124    	; 0xea6 <__ultoa_invert+0x9c>
 e2a:	b4 e0       	ldi	r27, 0x04	; 4
 e2c:	3c d0       	rcall	.+120    	; 0xea6 <__ultoa_invert+0x9c>
 e2e:	67 0f       	add	r22, r23
 e30:	78 1f       	adc	r23, r24
 e32:	89 1f       	adc	r24, r25
 e34:	9a 1f       	adc	r25, r26
 e36:	a1 1d       	adc	r26, r1
 e38:	68 0f       	add	r22, r24
 e3a:	79 1f       	adc	r23, r25
 e3c:	8a 1f       	adc	r24, r26
 e3e:	91 1d       	adc	r25, r1
 e40:	a1 1d       	adc	r26, r1
 e42:	6a 0f       	add	r22, r26
 e44:	71 1d       	adc	r23, r1
 e46:	81 1d       	adc	r24, r1
 e48:	91 1d       	adc	r25, r1
 e4a:	a1 1d       	adc	r26, r1
 e4c:	20 d0       	rcall	.+64     	; 0xe8e <__ultoa_invert+0x84>
 e4e:	09 f4       	brne	.+2      	; 0xe52 <__ultoa_invert+0x48>
 e50:	68 94       	set
 e52:	3f 91       	pop	r19
 e54:	2a e0       	ldi	r18, 0x0A	; 10
 e56:	26 9f       	mul	r18, r22
 e58:	11 24       	eor	r1, r1
 e5a:	30 19       	sub	r19, r0
 e5c:	30 5d       	subi	r19, 0xD0	; 208
 e5e:	31 93       	st	Z+, r19
 e60:	de f6       	brtc	.-74     	; 0xe18 <__ultoa_invert+0xe>
 e62:	cf 01       	movw	r24, r30
 e64:	08 95       	ret
 e66:	46 2f       	mov	r20, r22
 e68:	47 70       	andi	r20, 0x07	; 7
 e6a:	40 5d       	subi	r20, 0xD0	; 208
 e6c:	41 93       	st	Z+, r20
 e6e:	b3 e0       	ldi	r27, 0x03	; 3
 e70:	0f d0       	rcall	.+30     	; 0xe90 <__ultoa_invert+0x86>
 e72:	c9 f7       	brne	.-14     	; 0xe66 <__ultoa_invert+0x5c>
 e74:	f6 cf       	rjmp	.-20     	; 0xe62 <__ultoa_invert+0x58>
 e76:	46 2f       	mov	r20, r22
 e78:	4f 70       	andi	r20, 0x0F	; 15
 e7a:	40 5d       	subi	r20, 0xD0	; 208
 e7c:	4a 33       	cpi	r20, 0x3A	; 58
 e7e:	18 f0       	brcs	.+6      	; 0xe86 <__ultoa_invert+0x7c>
 e80:	49 5d       	subi	r20, 0xD9	; 217
 e82:	31 fd       	sbrc	r19, 1
 e84:	40 52       	subi	r20, 0x20	; 32
 e86:	41 93       	st	Z+, r20
 e88:	02 d0       	rcall	.+4      	; 0xe8e <__ultoa_invert+0x84>
 e8a:	a9 f7       	brne	.-22     	; 0xe76 <__ultoa_invert+0x6c>
 e8c:	ea cf       	rjmp	.-44     	; 0xe62 <__ultoa_invert+0x58>
 e8e:	b4 e0       	ldi	r27, 0x04	; 4
 e90:	a6 95       	lsr	r26
 e92:	97 95       	ror	r25
 e94:	87 95       	ror	r24
 e96:	77 95       	ror	r23
 e98:	67 95       	ror	r22
 e9a:	ba 95       	dec	r27
 e9c:	c9 f7       	brne	.-14     	; 0xe90 <__ultoa_invert+0x86>
 e9e:	00 97       	sbiw	r24, 0x00	; 0
 ea0:	61 05       	cpc	r22, r1
 ea2:	71 05       	cpc	r23, r1
 ea4:	08 95       	ret
 ea6:	9b 01       	movw	r18, r22
 ea8:	ac 01       	movw	r20, r24
 eaa:	0a 2e       	mov	r0, r26
 eac:	06 94       	lsr	r0
 eae:	57 95       	ror	r21
 eb0:	47 95       	ror	r20
 eb2:	37 95       	ror	r19
 eb4:	27 95       	ror	r18
 eb6:	ba 95       	dec	r27
 eb8:	c9 f7       	brne	.-14     	; 0xeac <__ultoa_invert+0xa2>
 eba:	62 0f       	add	r22, r18
 ebc:	73 1f       	adc	r23, r19
 ebe:	84 1f       	adc	r24, r20
 ec0:	95 1f       	adc	r25, r21
 ec2:	a0 1d       	adc	r26, r0
 ec4:	08 95       	ret

00000ec6 <__prologue_saves__>:
 ec6:	2f 92       	push	r2
 ec8:	3f 92       	push	r3
 eca:	4f 92       	push	r4
 ecc:	5f 92       	push	r5
 ece:	6f 92       	push	r6
 ed0:	7f 92       	push	r7
 ed2:	8f 92       	push	r8
 ed4:	9f 92       	push	r9
 ed6:	af 92       	push	r10
 ed8:	bf 92       	push	r11
 eda:	cf 92       	push	r12
 edc:	df 92       	push	r13
 ede:	ef 92       	push	r14
 ee0:	ff 92       	push	r15
 ee2:	0f 93       	push	r16
 ee4:	1f 93       	push	r17
 ee6:	cf 93       	push	r28
 ee8:	df 93       	push	r29
 eea:	cd b7       	in	r28, 0x3d	; 61
 eec:	de b7       	in	r29, 0x3e	; 62
 eee:	ca 1b       	sub	r28, r26
 ef0:	db 0b       	sbc	r29, r27
 ef2:	0f b6       	in	r0, 0x3f	; 63
 ef4:	f8 94       	cli
 ef6:	de bf       	out	0x3e, r29	; 62
 ef8:	0f be       	out	0x3f, r0	; 63
 efa:	cd bf       	out	0x3d, r28	; 61
 efc:	09 94       	ijmp

00000efe <__epilogue_restores__>:
 efe:	2a 88       	ldd	r2, Y+18	; 0x12
 f00:	39 88       	ldd	r3, Y+17	; 0x11
 f02:	48 88       	ldd	r4, Y+16	; 0x10
 f04:	5f 84       	ldd	r5, Y+15	; 0x0f
 f06:	6e 84       	ldd	r6, Y+14	; 0x0e
 f08:	7d 84       	ldd	r7, Y+13	; 0x0d
 f0a:	8c 84       	ldd	r8, Y+12	; 0x0c
 f0c:	9b 84       	ldd	r9, Y+11	; 0x0b
 f0e:	aa 84       	ldd	r10, Y+10	; 0x0a
 f10:	b9 84       	ldd	r11, Y+9	; 0x09
 f12:	c8 84       	ldd	r12, Y+8	; 0x08
 f14:	df 80       	ldd	r13, Y+7	; 0x07
 f16:	ee 80       	ldd	r14, Y+6	; 0x06
 f18:	fd 80       	ldd	r15, Y+5	; 0x05
 f1a:	0c 81       	ldd	r16, Y+4	; 0x04
 f1c:	1b 81       	ldd	r17, Y+3	; 0x03
 f1e:	aa 81       	ldd	r26, Y+2	; 0x02
 f20:	b9 81       	ldd	r27, Y+1	; 0x01
 f22:	ce 0f       	add	r28, r30
 f24:	d1 1d       	adc	r29, r1
 f26:	0f b6       	in	r0, 0x3f	; 63
 f28:	f8 94       	cli
 f2a:	de bf       	out	0x3e, r29	; 62
 f2c:	0f be       	out	0x3f, r0	; 63
 f2e:	cd bf       	out	0x3d, r28	; 61
 f30:	ed 01       	movw	r28, r26
 f32:	08 95       	ret

00000f34 <_exit>:
 f34:	f8 94       	cli

00000f36 <__stop_program>:
 f36:	ff cf       	rjmp	.-2      	; 0xf36 <__stop_program>
